{"version":3,"sources":["C:/Проекты/WhiteBoardManager/client/src/$_lazy_route_resource lazy","C:/Проекты/WhiteBoardManager/client/src/app/app.component.css","C:/Проекты/WhiteBoardManager/client/src/app/app.component.html","C:/Проекты/WhiteBoardManager/client/src/app/app.component.ts","C:/Проекты/WhiteBoardManager/client/src/app/app.module.ts","C:/Проекты/WhiteBoardManager/client/src/app/board/board.component.css","C:/Проекты/WhiteBoardManager/client/src/app/board/board.component.html","C:/Проекты/WhiteBoardManager/client/src/app/board/board.component.ts","C:/Проекты/WhiteBoardManager/client/src/app/home/home.component.css","C:/Проекты/WhiteBoardManager/client/src/app/home/home.component.html","C:/Проекты/WhiteBoardManager/client/src/app/home/home.component.ts","C:/Проекты/WhiteBoardManager/client/src/app/service/main.service.ts","C:/Проекты/WhiteBoardManager/client/src/environments/environment.ts","C:/Проекты/WhiteBoardManager/client/src/main.ts","C:/Проекты/WhiteBoardManager/client/src/sdk/index.ts","C:/Проекты/WhiteBoardManager/client/src/sdk/lb.config.ts","C:/Проекты/WhiteBoardManager/client/src/sdk/models/AccessToken.ts","C:/Проекты/WhiteBoardManager/client/src/sdk/models/BaseModels.ts","C:/Проекты/WhiteBoardManager/client/src/sdk/models/Customer.ts","C:/Проекты/WhiteBoardManager/client/src/sdk/models/Family.ts","C:/Проекты/WhiteBoardManager/client/src/sdk/models/FireLoop.ts","C:/Проекты/WhiteBoardManager/client/src/sdk/models/FireLoopRef.ts","C:/Проекты/WhiteBoardManager/client/src/sdk/models/Line.ts","C:/Проекты/WhiteBoardManager/client/src/sdk/models/Shift.ts","C:/Проекты/WhiteBoardManager/client/src/sdk/models/TimeClean.ts","C:/Проекты/WhiteBoardManager/client/src/sdk/models/Timeline.ts","C:/Проекты/WhiteBoardManager/client/src/sdk/models/User.ts","C:/Проекты/WhiteBoardManager/client/src/sdk/models/index.ts","C:/Проекты/WhiteBoardManager/client/src/sdk/services/core/auth.service.ts","C:/Проекты/WhiteBoardManager/client/src/sdk/services/core/base.service.ts","C:/Проекты/WhiteBoardManager/client/src/sdk/services/core/error.service.ts","C:/Проекты/WhiteBoardManager/client/src/sdk/services/core/index.ts","C:/Проекты/WhiteBoardManager/client/src/sdk/services/core/io.service.ts","C:/Проекты/WhiteBoardManager/client/src/sdk/services/core/real.time.ts","C:/Проекты/WhiteBoardManager/client/src/sdk/services/core/search.params.ts","C:/Проекты/WhiteBoardManager/client/src/sdk/services/custom/AccessToken.ts","C:/Проекты/WhiteBoardManager/client/src/sdk/services/custom/Customer.ts","C:/Проекты/WhiteBoardManager/client/src/sdk/services/custom/Family.ts","C:/Проекты/WhiteBoardManager/client/src/sdk/services/custom/Line.ts","C:/Проекты/WhiteBoardManager/client/src/sdk/services/custom/SDKModels.ts","C:/Проекты/WhiteBoardManager/client/src/sdk/services/custom/Shift.ts","C:/Проекты/WhiteBoardManager/client/src/sdk/services/custom/TimeClean.ts","C:/Проекты/WhiteBoardManager/client/src/sdk/services/custom/Timeline.ts","C:/Проекты/WhiteBoardManager/client/src/sdk/services/custom/User.ts","C:/Проекты/WhiteBoardManager/client/src/sdk/services/custom/index.ts","C:/Проекты/WhiteBoardManager/client/src/sdk/services/custom/logger.service.ts","C:/Проекты/WhiteBoardManager/client/src/sdk/services/index.ts","C:/Проекты/WhiteBoardManager/client/src/sdk/sockets/socket.browser.ts","C:/Проекты/WhiteBoardManager/client/src/sdk/sockets/socket.connections.ts","C:/Проекты/WhiteBoardManager/client/src/sdk/sockets/socket.driver.ts","C:/Проекты/WhiteBoardManager/client/src/sdk/storage/cookie.browser.ts","C:/Проекты/WhiteBoardManager/client/src/sdk/storage/storage.browser.ts","C:/Проекты/WhiteBoardManager/client/src/sdk/storage/storage.swaps.ts","ws (ignored)"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Проекты/WhiteBoardManager/client/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Проекты/WhiteBoardManager/client/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<div style=\\\"height:100%; margin:0;\\\">\\r\\n<router-outlet></router-outlet>\\r\\n</div>\\r\\n\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Проекты/WhiteBoardManager/client/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component, Attribute, OnInit } from '@angular/core';\r\nimport { Http, Response } from '@angular/http';\r\nimport { MainService } from './service/main.service';\r\n// tslint:disable-next-line:import-blacklist\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\n\r\n\r\nexport class AppComponent {\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Проекты/WhiteBoardManager/client/src/app/app.component.ts","import { UserApi } from './../sdk/services/custom/User';\r\nimport { ErrorHandler } from './../sdk/services/core/error.service';\r\nimport { TimelineApi } from './../sdk/services/custom/Timeline';\r\nimport { ShiftApi } from './../sdk/services/custom/Shift';\r\nimport { CustomerApi } from './../sdk/services/custom/Customer';\r\nimport { JSONSearchParams } from './../sdk/services/core/search.params';\r\nimport { InternalStorage } from './../sdk/storage/storage.swaps';\r\nimport { LoopBackAuth } from './../sdk/services/core/auth.service';\r\nimport { SocketDriver } from './../sdk/sockets/socket.driver';\r\nimport { SocketConnection } from './../sdk/sockets/socket.connections';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { BoardComponent } from './board/board.component';\r\nimport { HomeComponent } from './home/home.component' ;\r\nimport { MainService } from './service/main.service';\r\n\r\nimport { LineApi } from './../sdk/services/custom/Line';\r\nimport { SDKModels } from '../sdk/index';\r\n\r\n/*const appRoutes: Routes = [\r\n  { path: 'board', component: BoardComponent },\r\n  { path: 'home', component: HomeComponent },\r\n  { path: '', component: HomeComponent }\r\n];*/\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent, BoardComponent, HomeComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule, HttpClientModule,  RouterModule.forRoot([\r\n      { path: 'board', component: BoardComponent },\r\n      { path: 'home', component: HomeComponent },\r\n      { path: '', component: HomeComponent }\r\n    ]), FormsModule, HttpModule\r\n  ],\r\n  providers: [ MainService, SocketConnection, SocketDriver, SDKModels, LoopBackAuth, InternalStorage, JSONSearchParams, ErrorHandler\r\n  , LineApi, CustomerApi, ShiftApi, TimelineApi, UserApi ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Проекты/WhiteBoardManager/client/src/app/app.module.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"table{\\r\\n    table-layout: fixed;\\r\\n}\\r\\n\\r\\ntd{\\r\\n    word-wrap:break-word\\r\\n}\\r\\n\\r\\n.background{\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    background-color: rgb(0, 102, 204)  \\r\\n}\\r\\n\\r\\n.main,.head{\\r\\n    background-color: rgb(51, 153, 255);\\r\\n    height: 10%;\\r\\n}\\r\\n\\r\\n.week{\\r\\n    width: 15%;   \\r\\n}\\r\\n\\r\\n.date{\\r\\n    width: 20%;\\r\\n}\\r\\n\\r\\n.title{\\r\\n    width: 65%;\\r\\n}\\r\\n\\r\\n.head{\\r\\n    height: 8%;\\r\\n}\\r\\n\\r\\n.column1{\\r\\n    width: 15%;\\r\\n}\\r\\n\\r\\n.column2-6{\\r\\n    width: 10%;\\r\\n}\\r\\n\\r\\n\\r\\n.column7{\\r\\n    width: 15%;\\r\\n}\\r\\n\\r\\n.column8{\\r\\n    width: 20%;\\r\\n}\\r\\n\\r\\n.text-box{\\r\\n    background-color: rgb(255, 255, 255);\\r\\n    height: 8.2%;\\r\\n}\\r\\n\\r\\n.text-box-rowspan{\\r\\n    background-color: rgb(255, 255, 255);\\r\\n    color: rgb(0, 0, 0);\\r\\n    height: 16.4%;\\r\\n    font-size: 4vw;\\r\\n    font-family: Arial, Helvetica, sans-serif;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.time{\\r\\n    width: 35%;\\r\\n}\\r\\n\\r\\n.footer{\\r\\n    height: 14%;\\r\\n}\\r\\n\\r\\n.text-head,.text-sub-head{\\r\\n    font-size: 3vw;\\r\\n    /* line-height: 1vw; */\\r\\n    /* width: 100%; */\\r\\n    /* height: 100%; */\\r\\n    font-family: Arial, Helvetica, sans-serif;\\r\\n    text-align: center;\\r\\n    color: white;\\r\\n    /* margin: 0; */\\r\\n}\\r\\n\\r\\n.text-sub-head{\\r\\n    font-size: 2vw;\\r\\n    padding: 3px;\\r\\n}\\r\\n\\r\\n.text-clock{\\r\\n    font-size: 7vw;\\r\\n    /* width: 100%; */\\r\\n    /* height: 100%; */\\r\\n    font-family: Arial, Helvetica, sans-serif;\\r\\n    text-align: center;\\r\\n    color: rgb(0, 102, 204) \\r\\n    /* line-height: 8vw; */\\r\\n    /* margin: 0; */\\r\\n}\\r\\n\\r\\n.text-main{\\r\\n    font-size: 5vw;\\r\\n    /* width: 100%; */\\r\\n    /* height: 100%; */\\r\\n    font-family: Arial, Helvetica, sans-serif;\\r\\n    text-align: center;\\r\\n    color: rgb(0, 0, 0);\\r\\n    /* line-height: 6vw; */\\r\\n    /* margin: 0; */\\r\\n}\\r\\n\\r\\n.text-fpy{\\r\\n    font-size: 4vw;\\r\\n    font-family: Arial, Helvetica, sans-serif;\\r\\n    text-align: center;\\r\\n    color: rgb(0, 0, 0);\\r\\n}\\r\\n\\r\\n.text-small{\\r\\n    font-size: 2vw;\\r\\n    font-family: Arial, Helvetica, sans-serif;\\r\\n    text-align: center;\\r\\n    color: rgb(0, 0, 0);\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Проекты/WhiteBoardManager/client/src/app/board/board.component.css\n// module id = ../../../../../src/app/board/board.component.css\n// module chunks = main","module.exports = \"<table class=\\\"background\\\">\\r\\n        <tr>\\r\\n            <th class=\\\"week main text-head\\\">WK {{dateTime | date :'w'}}</th>\\r\\n            <th class=\\\"title main text-head\\\" colspan=\\\"6\\\">Production data</th>\\r\\n            <th class=\\\"date main text-head\\\">{{dateTime | date :'dd.MM.yyyy'}}</th>\\r\\n        </tr>\\r\\n        <tr>\\r\\n                <td class=\\\"head column1 text-sub-head\\\">Time/Model</td>\\r\\n                <td class=\\\"head column2-6 text-sub-head\\\">Target</td>\\r\\n                <td class=\\\"head column2-6 text-sub-head\\\">Plan</td>\\r\\n                <td class=\\\"head column2-6 text-sub-head\\\">Produced/Productivity</td>\\r\\n                <td class=\\\"head column2-6 text-sub-head\\\">Deviation of target</td>\\r\\n                <td class=\\\"head column2-6 text-sub-head\\\">Deviation of plan</td>\\r\\n                <td class=\\\"head column7 text-sub-head\\\">FPY, %</td>\\r\\n                <td class=\\\"head column8 text-sub-head\\\">Downtime description</td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n                <td class=\\\"column1 text-small text-box\\\" style=\\\"font-size:2vw;\\\">{{line1time}}</td>\\r\\n                <td class=\\\"column2-6 text-box-rowspan\\\" rowspan=\\\"2\\\">{{line1target}}</td>\\r\\n                <td class=\\\"column2-6 text-box-rowspan\\\" rowspan=\\\"2\\\">{{line1plan}}</td>\\r\\n                <td id=\\\"produced1\\\" class=\\\"column2-6 text-small text-box\\\" style=\\\"font-size:3.9vw;\\\">{{line1produced}}</td>\\r\\n                <td id=\\\"devoftarget1\\\" class=\\\"column2-6 text-box-rowspan\\\" rowspan=\\\"2\\\"></td>\\r\\n                <td id=\\\"devofplan1\\\" class=\\\"column2-6 text-box-rowspan\\\" rowspan=\\\"2\\\"></td>\\r\\n                <td class=\\\"column7 text-box-rowspan\\\" rowspan=\\\"2\\\">{{line1fpy}}</td>\\r\\n                <td class=\\\"column8 text-small text-box-rowspan\\\" rowspan=\\\"2\\\">{{line1description}}</td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n                <td class=\\\"column1 text-small text-box\\\" style=\\\"font-size:1.8vw;\\\">{{line1model}}</td>\\r\\n                <td id=\\\"productivity1\\\" class=\\\"column2-6 text-small text-box\\\" style=\\\"font-size:3.8vw; color:white;\\\"></td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n                <td class=\\\"column1 text-small text-box\\\" style=\\\"font-size:2vw;\\\">{{line2time}}</td>\\r\\n                <td class=\\\"column2-6 text-box-rowspan\\\" rowspan=\\\"2\\\">{{line2target}}</td>\\r\\n                <td class=\\\"column2-6 text-box-rowspan\\\" rowspan=\\\"2\\\">{{line2plan}}</td>\\r\\n                <td class=\\\"column2-6 text-small text-box\\\" style=\\\"font-size:3.9vw;\\\">{{line2produced}}</td>\\r\\n                <td id=\\\"devoftarget2\\\" class=\\\"column2-6 text-box-rowspan\\\" rowspan=\\\"2\\\"></td>\\r\\n                <td id=\\\"devofplan2\\\" class=\\\"column2-6 text-box-rowspan\\\" rowspan=\\\"2\\\"></td>\\r\\n                <td class=\\\"column7 text-box-rowspan\\\" rowspan=\\\"2\\\">{{line2fpy}}</td>\\r\\n                <td class=\\\"column8 text-small text-box-rowspan\\\" rowspan=\\\"2\\\">{{line2description}}</td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n                <td class=\\\"column1 text-small text-box\\\" style=\\\"font-size:1.8vw;\\\">{{line2model}}</td>\\r\\n                <td id=\\\"productivity2\\\" class=\\\"column2-6 text-small text-box\\\" style=\\\"font-size:3.8vw; color:white;\\\"></td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n                <td class=\\\"column1 text-small text-box\\\" style=\\\"font-size:2vw;\\\">{{line3time}}</td>\\r\\n                <td class=\\\"column2-6 text-box-rowspan\\\" rowspan=\\\"2\\\">{{line3target}}</td>\\r\\n                <td class=\\\"column2-6 text-box-rowspan\\\" rowspan=\\\"2\\\">{{line3plan}}</td>\\r\\n                <td class=\\\"column2-6 text-small text-box\\\" style=\\\"font-size:3.9vw;\\\">{{line3produced}}</td>\\r\\n                <td id=\\\"devoftarget3\\\" class=\\\"column2-6 text-box-rowspan\\\" rowspan=\\\"2\\\"></td>\\r\\n                <td id=\\\"devofplan3\\\" class=\\\"column2-6 text-box-rowspan\\\" rowspan=\\\"2\\\"></td>\\r\\n                <td class=\\\"column7 text-box-rowspan\\\" rowspan=\\\"2\\\">{{line3fpy}}</td>\\r\\n                <td class=\\\"column8 text-small text-box-rowspan\\\" rowspan=\\\"2\\\">{{line3description}}</td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n                <td class=\\\"column1 text-small text-box\\\" style=\\\"font-size:1.8vw;\\\">{{line3model}}</td>\\r\\n                <td id=\\\"productivity3\\\" class=\\\"column2-6 text-small text-box\\\" style=\\\"font-size:3.8vw; color:white;\\\"></td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n                <td class=\\\"column1 text-small text-box\\\" style=\\\"font-size:2vw;\\\">{{line4time}}</td>\\r\\n                <td class=\\\"column2-6 text-box-rowspan\\\" rowspan=\\\"2\\\">{{line4target}}</td>\\r\\n                <td class=\\\"column2-6 text-box-rowspan\\\" rowspan=\\\"2\\\">{{line4plan}}</td>\\r\\n                <td class=\\\"column2-6 text-small text-box\\\" style=\\\"font-size:3.9vw;\\\">{{line4produced}}</td>\\r\\n                <td id=\\\"devoftarget4\\\" class=\\\"column2-6 text-box-rowspan\\\" rowspan=\\\"2\\\"></td>\\r\\n                <td id=\\\"devofplan4\\\" class=\\\"column2-6 text-box-rowspan\\\" rowspan=\\\"2\\\"></td>\\r\\n                <td class=\\\"column7 text-box-rowspan\\\" rowspan=\\\"2\\\">{{line4fpy}}</td>\\r\\n                <td class=\\\"column8 text-small text-box-rowspan\\\" rowspan=\\\"2\\\">{{line4description}}</td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n                <td class=\\\"column1 text-small text-box\\\" style=\\\"font-size:1.8vw;\\\">{{line4model}}</td>\\r\\n                <td id=\\\"productivity4\\\" class=\\\"column2-6 text-small text-box\\\" style=\\\"font-size:3.8vw; color:white;\\\"></td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n                <td class=\\\"column1 text-sub-head text-box footer text-clock\\\" colspan=\\\"3\\\">{{dateTime | date :'HH:mm:ss'}}</td>\\r\\n                <td class=\\\"column2-6 text-sub-head text-box footer text-main\\\">50</td>\\r\\n                <td class=\\\"column2-6 text-sub-head text-box footer text-main\\\">220</td>\\r\\n                <td class=\\\"column2-6 text-sub-head text-box footer text-main\\\">120</td>\\r\\n                <td class=\\\"column7 text-sub-head text-box footer text-fpy\\\">99.50</td>\\r\\n                <td class=\\\"column8 text-sub-head text-box footer text-small\\\"></td>\\r\\n        </tr>\\r\\n\\r\\n\\r\\n\\r\\n</table>\\r\\n\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Проекты/WhiteBoardManager/client/src/app/board/board.component.html\n// module id = ../../../../../src/app/board/board.component.html\n// module chunks = main","import { Customer } from './../../sdk/models/Customer';\r\nimport { Shift } from './../../sdk/models/Shift';\r\nimport { Line } from './../../sdk/models/Line';\r\nimport { Timeline } from './../../sdk/models/Timeline';\r\nimport { Component, Attribute, OnInit } from '@angular/core';\r\nimport { MainService } from '../service/main.service';\r\n// tslint:disable-next-line:import-blacklist\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { DatePipe } from '@angular/common';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { error } from 'util';\r\nimport { LoopBackConfig, CustomerApi, ShiftApi, LineApi } from '../../sdk';\r\nimport { Injectable, Inject, Optional } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-board',\r\n  templateUrl: './board.component.html',\r\n  styleUrls: ['./board.component.css']\r\n})\r\n\r\n\r\nexport class BoardComponent {\r\n  line: string;\r\n  lineId: string;\r\n  timelineFromTime = new Date();\r\n  timelineToTime = new Date();\r\n  public currentShiftId: string;\r\n  private querySubscription: Subscription;\r\n  dateTime = new Date();\r\n\r\n  index = 1;\r\n  line1time: string;\r\n  line1model: string;\r\n  line1plan = 0;\r\n  line1target = 0;\r\n  line1produced = 0;\r\n  line1description: string;\r\n  line1fpy: number;\r\n  line2time: string;\r\n  line2model: string;\r\n  line2plan = 0;\r\n  line2target = 0;\r\n  line2produced = 0;\r\n  line2description: string;\r\n  line2fpy: number;\r\n  line3time: string;\r\n  line3model: string;\r\n  line3plan = 0;\r\n  line3target = 0;\r\n  line3produced = 0;\r\n  line3description: string;\r\n  line3fpy: number;\r\n  line4time: string;\r\n  line4model: string;\r\n  line4plan = 0;\r\n  line4target = 0;\r\n  line4produced = 0;\r\n  line4description: string;\r\n  line4fpy: number;\r\n\r\n  constructor(private route: ActivatedRoute\r\n    , public mainService: MainService\r\n    , private lineApi: LineApi\r\n    , private customerApi: CustomerApi\r\n    , private shiftApi: ShiftApi) {\r\n\r\n    this.querySubscription = this.route.queryParams.subscribe(\r\n      (queryParam: any) => {\r\n        this.line = queryParam['line'];\r\n      }\r\n    );\r\n\r\n    const timer = Observable.timer(1000, 1000);\r\n    timer.subscribe(x => {\r\n      this.dateTime = new Date();\r\n    });\r\n\r\n\r\n    lineApi.findOne({where: {name: this.line}}, function(err, lines) { }).subscribe((line: Line) => {\r\n          lineApi.getShifts(line.id, {where: {isEnable: true}}, function(err, shifts) { } ).subscribe((shifts: Shift[]) => {\r\n            shifts.forEach(shift => {\r\n              shiftApi.getTimelines(shift.id, undefined, function(err, timelines) { }).subscribe((timelines: Timeline[]) => {\r\n                let i = 1;\r\n                // tslint:disable-next-line:max-line-length\r\n                timelines.sort((a: Timeline, b: Timeline) => Date.parse(new Date().toDateString() + ' ' + a.from) - Date.parse(new Date().toDateString() + ' ' + b.from))\r\n                  .forEach(timeline => {\r\n                    if (i === 1) {\r\n                      this.timelineFromTime.setTime(Date.parse(new Date().toDateString() + ' ' + timeline.from));\r\n                    } else {\r\n                      this.timelineToTime.setTime(Date.parse(new Date().toDateString() + ' ' + timeline.to));\r\n                    }\r\n                    i++;\r\n                  });\r\n                // tslint:disable-next-line:max-line-length\r\n                if (this.dateTime.getTime() >= this.timelineFromTime.getTime() && this.dateTime.getTime() <= this.timelineToTime.getTime()) {\r\n                  console.log('Current shift found ' + shift.name);\r\n                  this.currentShiftId = shift.id;\r\n                  this.fillBoard();\r\n                }\r\n\r\n              });\r\n            });\r\n          });\r\n    }\r\n    );\r\n  }\r\n\r\n  fillBoard() {\r\n    if (this.currentShiftId !== undefined) {\r\n      this.shiftApi.getTimelines(this.currentShiftId, undefined, function(err, timelines) { }).subscribe((timelines: Timeline[]) => {\r\n        // tslint:disable-next-line:max-line-length\r\n        timelines.sort((a: Timeline, b: Timeline) => Date.parse(new Date().toDateString() + ' ' + a.from) - Date.parse(new Date().toDateString() + ' ' + b.from))\r\n          .forEach(t => {\r\n            switch (this.index) {\r\n              case 1: {\r\n                this.line1time = t.from + ' - ' + t.to;\r\n                this.line1model = t.model;\r\n                this.line1plan = t.plan;\r\n                this.line1target = t.target;\r\n                this.line1produced = t.produced;\r\n                this.line1fpy = t.fpy;\r\n\r\n                if (t.produced / t.target * 100 > 90) {\r\n                  document.getElementById('productivity1').style.backgroundColor = 'green';\r\n                } else {\r\n                  document.getElementById('productivity1').style.backgroundColor = 'red';\r\n                }\r\n                if (t.produced / t.target * 100 > 99.99) {\r\n                  document.getElementById('productivity1').innerText = (t.produced / t.target * 100).toFixed(1);\r\n                } else {\r\n                  document.getElementById('productivity1').innerText = (t.produced / t.target * 100).toFixed(2);\r\n                }\r\n\r\n                document.getElementById('devoftarget1').innerText = String(t.produced - t.target);\r\n                if (t.produced - t.target > 0) {\r\n                  document.getElementById('devoftarget1').style.color = 'green';\r\n                } else {\r\n                  document.getElementById('devoftarget1').style.color = 'red';\r\n                }\r\n\r\n                document.getElementById('devofplan1').innerText = String(t.produced - t.plan);\r\n                if (t.produced - t.plan > 0) {\r\n                  document.getElementById('devofplan1').style.color = 'green';\r\n                } else {\r\n                  document.getElementById('devofplan1').style.color = 'red';\r\n                }\r\n                this.index++;\r\n                break;\r\n              }\r\n              case 2: {\r\n                this.line2time = t.from + ' - ' + t.to;\r\n                this.line2model = t.model;\r\n                this.line2plan = t.plan;\r\n                this.line2target = t.target;\r\n                this.line2produced = t.produced;\r\n                this.line2fpy = t.fpy;\r\n                this.index++;\r\n\r\n                if (t.produced / t.target * 100 > 90) {\r\n                  document.getElementById('productivity2').style.backgroundColor = 'green';\r\n                } else {\r\n                  document.getElementById('productivity2').style.backgroundColor = 'red';\r\n                }\r\n                if (t.produced / t.target * 100 > 99.99) {\r\n                  document.getElementById('productivity2').innerText = (t.produced / t.target * 100).toFixed(1);\r\n                } else {\r\n                  document.getElementById('productivity2').innerText = (t.produced / t.target * 100).toFixed(2);\r\n                }\r\n\r\n                document.getElementById('devoftarget2').innerText = String(t.produced - t.target);\r\n                if (t.produced - t.target > 0) {\r\n                  document.getElementById('devoftarget2').style.color = 'green';\r\n                } else {\r\n                  document.getElementById('devoftarget2').style.color = 'red';\r\n                }\r\n\r\n                document.getElementById('devofplan2').innerText = String(t.produced - t.plan);\r\n                if (t.produced - t.plan > 0) {\r\n                  document.getElementById('devofplan2').style.color = 'green';\r\n                } else {\r\n                  document.getElementById('devofplan2').style.color = 'red';\r\n                }\r\n                break;\r\n              }\r\n              case 3: {\r\n                this.line3time = t.from + ' - ' + t.to;\r\n                this.line3model = t.model;\r\n                this.line3plan = t.plan;\r\n                this.line3target = t.target;\r\n                this.line3produced = t.produced;\r\n                this.line3fpy = t.fpy;\r\n                this.index++;\r\n\r\n                if (t.produced / t.target * 100 > 90) {\r\n                  document.getElementById('productivity3').style.backgroundColor = 'green';\r\n                } else {\r\n                  document.getElementById('productivity3').style.backgroundColor = 'red';\r\n                }\r\n                if (t.produced / t.target * 100 > 99.99) {\r\n                  document.getElementById('productivity3').innerText = (t.produced / t.target * 100).toFixed(1);\r\n                } else {\r\n                  document.getElementById('productivity3').innerText = (t.produced / t.target * 100).toFixed(2);\r\n                }\r\n\r\n                document.getElementById('devoftarget3').innerText = String(t.produced - t.target);\r\n                if (t.produced - t.target > 0) {\r\n                  document.getElementById('devoftarget3').style.color = 'green';\r\n                } else {\r\n                  document.getElementById('devoftarget3').style.color = 'red';\r\n                }\r\n\r\n                document.getElementById('devofplan3').innerText = String(t.produced - t.plan);\r\n                if (t.produced - t.plan > 0) {\r\n                  document.getElementById('devofplan3').style.color = 'green';\r\n                } else {\r\n                  document.getElementById('devofplan3').style.color = 'red';\r\n                }\r\n                break;\r\n              }\r\n              case 4: {\r\n                this.line4time = t.from + ' - ' + t.to;\r\n                this.line4model = t.model;\r\n                this.line4plan = t.plan;\r\n                this.line4target = t.target;\r\n                this.line4produced = t.produced;\r\n                this.line4fpy = t.fpy;\r\n                this.index++;\r\n\r\n                if (t.produced / t.target * 100 > 90) {\r\n                  document.getElementById('productivity4').style.backgroundColor = 'green';\r\n                } else {\r\n                  document.getElementById('productivity4').style.backgroundColor = 'red';\r\n                }\r\n                if (t.produced / t.target * 100 > 99.99) {\r\n                  document.getElementById('productivity4').innerText = (t.produced / t.target * 100).toFixed(1);\r\n                } else {\r\n                  document.getElementById('productivity4').innerText = (t.produced / t.target * 100).toFixed(2);\r\n                }\r\n\r\n                document.getElementById('devoftarget4').innerText = String(t.produced - t.target);\r\n                if (t.produced - t.target > 0) {\r\n                  document.getElementById('devoftarget4').style.color = 'green';\r\n                } else {\r\n                  document.getElementById('devoftarget4').style.color = 'red';\r\n                }\r\n\r\n                document.getElementById('devofplan4').innerText = String(t.produced - t.plan);\r\n                if (t.produced - t.plan > 0) {\r\n                  document.getElementById('devofplan4').style.color = 'green';\r\n                } else {\r\n                  document.getElementById('devofplan4').style.color = 'red';\r\n                }\r\n                break;\r\n              }\r\n            }\r\n\r\n          });\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Проекты/WhiteBoardManager/client/src/app/board/board.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".home-layout{\\r\\n    height: 100%;\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.header{\\r\\n    width: 100%;\\r\\n    height: 50px;\\r\\n    background-color: rgb(0, 102, 204);\\r\\n    line-height: 50px;\\r\\n}\\r\\n\\r\\n.title{\\r\\n    color: white;\\r\\n    font-size: 32px;\\r\\n    font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\\r\\n    margin: 10px;\\r\\n}\\r\\n\\r\\nselect.soflow{\\r\\n    -webkit-appearance: button;\\r\\n    -webkit-border-radius: 2px;\\r\\n    -webkit-box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.1);\\r\\n    -webkit-padding-end: 20px;\\r\\n    -webkit-padding-start: 2px;\\r\\n    -webkit-user-select: none;\\r\\n    background-position: 97% center;\\r\\n    background-repeat: no-repeat;\\r\\n    border: 1px solid #AAA;\\r\\n    color: rgb(43, 43, 43);\\r\\n    font-size: inherit;\\r\\n    overflow: hidden;\\r\\n    padding: 5px 10px;\\r\\n    text-overflow: ellipsis;\\r\\n    white-space: nowrap;\\r\\n    width: 200px;\\r\\n }\\r\\n\\r\\n #grid-controls{\\r\\n   display: -ms-grid;\\r\\n   display: grid;\\r\\n   -ms-grid-columns: 250px 250px 250px ;\\r\\n       grid-template-columns: 250px 250px 250px ; \\r\\n   -ms-grid-rows: 50px 50px; \\r\\n       grid-template-rows: 50px 50px; \\r\\n   font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\\r\\n }\\r\\n\\r\\n #grid-editor{\\r\\n    display: -ms-grid;\\r\\n    display: grid;\\r\\n    -ms-grid-columns: 90px 90px 300px 100px 100px 100px 100px 300px ;\\r\\n        grid-template-columns: 90px 90px 300px 100px 100px 100px 100px 300px ; \\r\\n    -ms-grid-rows: 20px 45px 45px 45px 45px; \\r\\n        grid-template-rows: 20px 45px 45px 45px 45px; \\r\\n    font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\\r\\n  }\\r\\n\\r\\n .grid-item {\\r\\n    padding: .2em;\\r\\n  } \\r\\n\\r\\n  p {\\r\\nmargin-left: 5px;\\r\\nmargin-top: 0px;\\r\\nmargin-bottom: 1px;\\r\\ncolor: rgb(92, 92, 92);\\r\\n  }\\r\\n\\r\\n  input {\\r\\n      width: 100%;\\r\\n    font-size: 32px;\\r\\n    font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\\r\\n  }\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Проекты/WhiteBoardManager/client/src/app/home/home.component.css\n// module id = ../../../../../src/app/home/home.component.css\n// module chunks = main","module.exports = \"<div class=\\\"home-layout\\\">\\n  <header class=\\\"header\\\">\\n    <div class=\\\"header-row\\\">\\n      <span class=\\\"title\\\">White Board Manager</span>\\n    </div>\\n  </header>\\n  <main class=\\\"content\\\">\\n    <div id=\\\"grid-controls\\\">\\n      <div class=\\\"grid-item\\\">\\n        <p>Customer:</p>\\n        <select id=\\\"customer-select\\\" class=\\\"soflow\\\" (change)=\\\"onCustomerSelect($event.target.value)\\\">\\n          <option value=\\\"\\\" selected disabled hidden></option>\\n          <option *ngFor=\\\"let customer of Customers\\\" [value]=\\\"customer.id\\\">{{customer.name}}</option>\\n        </select>\\n      </div>\\n      <div class=\\\"grid-item\\\">\\n        <p>Line:</p>\\n        <select id=\\\"line-select\\\" [(ngModel)]=\\\"lineSelector\\\" class=\\\"soflow\\\" (change)=\\\"onLineSelect($event.target.value)\\\">\\n          <option value=\\\"\\\" selected disabled hidden></option>\\n          <option *ngFor=\\\"let line of Lines\\\" [value]=\\\"line.id\\\">{{line.name}}</option>\\n        </select>\\n      </div>\\n      <div class=\\\"grid-item\\\">\\n        <p>Line:</p>\\n        <select id=\\\"shift-select\\\" [(ngModel)]=\\\"shiftSelector\\\" class=\\\"soflow\\\" (change)=\\\"onShiftSelect($event.target.value)\\\">\\n          <option value=\\\"\\\" selected disabled hidden></option>\\n          <option *ngFor=\\\"let shift of Shifts\\\" [value]=\\\"shift.id\\\">{{shift.name}}</option>\\n        </select>\\n      </div>\\n    </div>\\n    <div id=\\\"grid-editor\\\">\\n\\n      <!-- header -->\\n      <div class=\\\"grid-item\\\">\\n        <p>From time</p>\\n      </div>\\n      <div class=\\\"grid-item\\\">\\n        <p>To time</p>\\n      </div>\\n      <div class=\\\"grid-item\\\">\\n        <p>Model</p>\\n      </div>\\n      <div class=\\\"grid-item\\\">\\n        <p>Plan</p>\\n      </div>\\n      <div class=\\\"grid-item\\\">\\n        <p>Target</p>\\n      </div>\\n      <div class=\\\"grid-item\\\">\\n        <p>Produced</p>\\n      </div>\\n      <div class=\\\"grid-item\\\">\\n        <p>FPY</p>\\n      </div>\\n      <div class=\\\"grid-item\\\">\\n        <p>Description</p>\\n      </div>\\n\\n      <!-- 1 timeline -->\\n      <div class=\\\"grid-item\\\">\\n        <input [(ngModel)]=\\\"from1\\\" type=\\\"text\\\" (input)=\\\"onFrom1input($event.target.value)\\\">\\n      </div>\\n      <div class=\\\"grid-item\\\">\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"to1\\\">\\n      </div>\\n      <div class=\\\"grid-item\\\">\\n        <input [(ngModel)]=\\\"model1\\\" type=\\\"text\\\">\\n      </div>\\n      <div class=\\\"grid-item\\\">\\n        <input [(ngModel)]=\\\"plan1\\\" type=\\\"text\\\">\\n      </div>\\n      <div class=\\\"grid-item\\\">\\n        <input [(ngModel)]=\\\"target1\\\" type=\\\"text\\\">\\n      </div>\\n      <div class=\\\"grid-item\\\">\\n        <input [(ngModel)]=\\\"produced1\\\" type=\\\"text\\\">\\n      </div>\\n      <div class=\\\"grid-item\\\">\\n        <input [(ngModel)]=\\\"fpy1\\\" type=\\\"text\\\">\\n      </div>\\n      <div class=\\\"grid-item\\\">\\n        <textarea [(ngModel)]=\\\"description1\\\" style=\\\"font-size:12px; height:37px; width:300px; resize: none;\\\"></textarea>\\n      </div>\\n\\n      <!-- 2 timeline -->\\n      <div class=\\\"grid-item\\\">\\n        <input [(ngModel)]=\\\"from2\\\" type=\\\"text\\\">\\n      </div>\\n      <div class=\\\"grid-item\\\">\\n        <input [(ngModel)]=\\\"to2\\\" type=\\\"text\\\">\\n      </div>\\n      <div class=\\\"grid-item\\\">\\n        <input [(ngModel)]=\\\"model2\\\" type=\\\"text\\\">\\n      </div>\\n      <div class=\\\"grid-item\\\">\\n        <input [(ngModel)]=\\\"plan2\\\" type=\\\"text\\\">\\n      </div>\\n      <div class=\\\"grid-item\\\">\\n        <input [(ngModel)]=\\\"target2\\\" type=\\\"text\\\">\\n      </div>\\n      <div class=\\\"grid-item\\\">\\n        <input [(ngModel)]=\\\"produced2\\\" type=\\\"text\\\">\\n      </div>\\n      <div class=\\\"grid-item\\\">\\n        <input [(ngModel)]=\\\"fpy2\\\" type=\\\"text\\\">\\n      </div>\\n      <div class=\\\"grid-item\\\">\\n          <textarea [(ngModel)]=\\\"description2\\\" style=\\\"font-size:12px; height:37px; width:300px; resize: none;\\\"></textarea>\\n      </div>\\n\\n      <!-- 3 timeline -->\\n      <div class=\\\"grid-item\\\">\\n        <input [(ngModel)]=\\\"from3\\\" type=\\\"text\\\">\\n      </div>\\n      <div class=\\\"grid-item\\\">\\n        <input [(ngModel)]=\\\"to3\\\" type=\\\"text\\\">\\n      </div>\\n      <div class=\\\"grid-item\\\">\\n        <input [(ngModel)]=\\\"model3\\\" type=\\\"text\\\">\\n      </div>\\n      <div class=\\\"grid-item\\\">\\n        <input [(ngModel)]=\\\"plan3\\\" type=\\\"text\\\">\\n      </div>\\n      <div class=\\\"grid-item\\\">\\n        <input [(ngModel)]=\\\"target3\\\" type=\\\"text\\\">\\n      </div>\\n      <div class=\\\"grid-item\\\">\\n        <input [(ngModel)]=\\\"produced3\\\" type=\\\"text\\\">\\n      </div>\\n      <div class=\\\"grid-item\\\">\\n        <input [(ngModel)]=\\\"fpy3\\\" type=\\\"text\\\">\\n      </div>\\n      <div class=\\\"grid-item\\\">\\n          <textarea [(ngModel)]=\\\"description3\\\" style=\\\"font-size:12px; height:37px; width:300px; resize: none;\\\"></textarea>\\n      </div>\\n\\n      <!-- 4 timeline -->\\n      <div class=\\\"grid-item\\\">\\n        <input [(ngModel)]=\\\"from4\\\" type=\\\"text\\\">\\n      </div>\\n      <div class=\\\"grid-item\\\">\\n        <input [(ngModel)]=\\\"to4\\\" type=\\\"text\\\">\\n      </div>\\n      <div class=\\\"grid-item\\\">\\n        <input [(ngModel)]=\\\"model4\\\" type=\\\"text\\\">\\n      </div>\\n      <div class=\\\"grid-item\\\">\\n        <input [(ngModel)]=\\\"plan4\\\" type=\\\"text\\\">\\n      </div>\\n      <div class=\\\"grid-item\\\">\\n        <input [(ngModel)]=\\\"target4\\\" type=\\\"text\\\">\\n      </div>\\n      <div class=\\\"grid-item\\\">\\n        <input [(ngModel)]=\\\"produced4\\\" type=\\\"text\\\">\\n      </div>\\n      <div class=\\\"grid-item\\\">\\n        <input [(ngModel)]=\\\"fpy4\\\" type=\\\"text\\\">\\n      </div>\\n      <div class=\\\"grid-item\\\">\\n          <textarea [(ngModel)]=\\\"description4\\\" style=\\\"font-size:12px; height:37px; width:300px; resize: none;\\\"></textarea>\\n      </div>\\n    </div>\\n  </main>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Проекты/WhiteBoardManager/client/src/app/home/home.component.html\n// module id = ../../../../../src/app/home/home.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { MainService } from '../service/main.service';\nimport { Customer } from './../../sdk/models/Customer';\nimport { Shift } from './../../sdk/models/Shift';\nimport { Line } from './../../sdk/models/Line';\nimport { Timeline } from './../../sdk/models/Timeline';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { LoopBackConfig, CustomerApi, ShiftApi, LineApi } from '../../sdk';\nimport { TimelineApi } from '../../sdk/services/custom/Timeline';\n\nimport { User, AccessToken } from './../../sdk/models';\nimport { UserApi } from '../../sdk';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\n\nexport class HomeComponent {\n\n  Customers: Customer[];\n  Lines: Line[];\n  Shifts: Shift[];\n /* private _fb: FormBuilder;\n  myForm: FormGroup;*/\n  from1: string;\n  to1: string;\n  model1: string;\n  plan1: string;\n  target1: string;\n  produced1: string;\n  fpy1: string;\n  description1: string;\n  from2: string;\n  to2: string;\n  model2: string;\n  plan2: string;\n  target2: string;\n  produced2: string;\n  fpy2: string;\n  description2: string;\n  from3: string;\n  to3: string;\n  model3: string;\n  plan3: string;\n  target3: string;\n  produced3: string;\n  fpy3: string;\n  description3: string;\n  from4: string;\n  to4: string;\n  model4: string;\n  plan4: string;\n  target4: string;\n  produced4: string;\n  fpy4: string;\n  description4: string;\n\n  timeline1Id: string;\n  timeline2Id: string;\n  timeline3Id: string;\n  timeline4Id: string;\n\n  lineSelector: string;\n  shiftSelector: string;\n\n  private user: User = new User();\n\n\n  constructor(public mainService: MainService\n    , private customerApi: CustomerApi\n    , private lineApi: LineApi\n    , private shiftApi: ShiftApi\n    , private timelineApi: TimelineApi, private userApi: UserApi) {\n      this.user.username = 'admin';\n      this.user.password = 'admin';\n      this.user.email = 'admin@admin.com';\n      // this.signin();\n    customerApi.find(undefined, function(err, customer) { }).subscribe((customers: Customer[]) => {\n      this.Customers = customers;\n    });\n\n  }\n\n  private signup(): void {\n    this.userApi.create(this.user).subscribe((user: User) => this.signin());\n}\n\nprivate signin(): void {\n  this.userApi.login(this.user, undefined, undefined, function(err, result) {\n    console.log(result);\n  }).subscribe((token: AccessToken) => alert('Fake Redirect'));\n}\n\n  onCustomerSelect(customerId): void {\n    this.clearEditor();\n    if (this.Shifts !== undefined) {\n      while (this.Shifts.length > 0) {\n        this.Shifts.pop();\n      }\n    }\n    if (this.Lines !== undefined) {\n      while (this.Lines.length > 0) {\n        this.Lines.pop();\n      }\n    }\n\n    this.lineSelector = '';\n    this.customerApi.getLines(customerId, undefined, function(err, line) { }).subscribe((lines: Line[]) => {\n      this.Lines = lines;\n    });\n  }\n\n  onLineSelect(lineId): void {\n    this.clearEditor();\n    if (this.Shifts !== undefined) {\n      while (this.Shifts.length > 0) {\n        this.Shifts.pop();\n      }\n    }\n\n    this.shiftSelector = '';\n    this.lineApi.getShifts(lineId, undefined, function(err, shift) { }).subscribe((shifts: Shift[]) => {\n      this.Shifts = shifts;\n    });\n  }\n\n  onShiftSelect(shiftId): void {\n    this.clearEditor();\n    this.shiftApi.getTimelines(shiftId, undefined, function(err, timeline) { }).subscribe((timelines: Timeline[]) => {\n      let i = 1;\n      // tslint:disable-next-line:max-line-length\n      timelines.sort((a: Timeline, b: Timeline) => Date.parse(new Date().toDateString() + ' ' + a.from) - Date.parse(new Date().toDateString() + ' ' + b.from))\n        .forEach(t => {\n          switch (i) {\n            case 1: {\n              this.timeline1Id = t.id;\n              this.from1 = t.from === null ? '' : t.from;\n              this.to1 = t.to === null ? '' : t.to;\n              this.model1 = t.model === null ? '' : t.model;\n              this.plan1 = t.plan === null ? '0' : String(t.plan);\n              this.target1 = t.target === null ? '0' : String(t.target);\n              this.produced1 = t.produced === null ? '0' : String(t.produced);\n              this.fpy1 = t.fpy === null ? '' : String(t.fpy);\n              this.description1 = t.description.length === 0 ? '' : String(t.description);\n              i++;\n              break;\n            }\n            case 2: {\n              this.timeline2Id = t.id;\n              this.from2 = t.from === null ? '' : t.from;\n              this.to2 = t.to === null ? '' : t.to;\n              this.model2 = t.model === null ? '' : t.model;\n              this.plan2 = t.plan === null ? '0' : String(t.plan);\n              this.target2 = t.target === null ? '0' : String(t.target);\n              this.produced2 = t.produced === null ? '0' : String(t.produced);\n              this.fpy2 = t.fpy === null ? '' : String(t.fpy);\n              this.description2 = t.description.length === 0 ? '' : String(t.description);\n              i++;\n              break;\n            }\n            case 3: {\n              this.timeline3Id = t.id;\n              this.from3 = t.from === null ? '' : t.from;\n              this.to3 = t.to === null ? '' : t.to;\n              this.model3 = t.model === null ? '' : t.model;\n              this.plan3 = t.plan === null ? '0' : String(t.plan);\n              this.target3 = t.target === null ? '0' : String(t.target);\n              this.produced3 = t.produced === null ? '0' : String(t.produced);\n              this.fpy3 = t.fpy === null ? '' : String(t.fpy);\n              this.description3 = t.description.length === 0 ? '' : String(t.description);\n              i++;\n              break;\n            }\n            case 4: {\n              this.timeline4Id = t.id;\n              this.from4 = t.from === null ? '' : t.from;\n              this.to4 = t.to === null ? '' : t.to;\n              this.model4 = t.model === null ? '' : t.model;\n              this.plan4 = t.plan === null ? '0' : String(t.plan);\n              this.target4 = t.target === null ? '0' : String(t.target);\n              this.produced4 = t.produced === null ? '0' : String(t.produced);\n              this.fpy4 = t.fpy === null ? '' : String(t.fpy);\n              this.description4 = t.description.length === 0 ? '' : String(t.description);\n              i++;\n              break;\n            }\n          }\n        });\n    });\n  }\n\n  onFrom1input(value): void {\n   this.timelineApi.findById(this.timeline1Id, undefined, function(err, result) { }).subscribe((t: Timeline) => {\n         t.from  = value;\n         console.log(t.from);\n         /*this.timelineApi.upsert(t, function(err, headers) { }).subscribe((timeline: Timeline) => {\n          console.log('Done');\n        });*/\n\n        var request = new XMLHttpRequest();\n        var url = 'http://10.152.5.93:3030/api/Users/login';\n\n          if (request) {\n            request.open('POST', url , true);\n            // request.setRequestHeader('Content-type', 'application/json');\n            // request.setRequestHeader('Access-Control-Allow-Origin', '*');\n            request.withCredentials = true;\n            // invocation.onreadystatechange = handler;\n            request.send(this.user);\n          }\n\n\n          /*this.timelineApi.updateAttributes(this.timeline1Id, t).subscribe((timeline: Timeline) => {\n            console.log(timeline.from);\n          });*/\n    });\n  }\n\n  clearEditor() {\n    this.from1 = '';\n    this.to1 = '';\n    this.model1 = '';\n    this.plan1 = '';\n    this.target1 = '';\n    this.produced1 = '';\n    this.fpy1 = '';\n    this.description1 = '';\n    this.from2 = '';\n    this.to2 = '';\n    this.model2 = '';\n    this.plan2 = '';\n    this.target2 = '';\n    this.produced2 = '';\n    this.fpy2 = '';\n    this.description2 = '';\n    this.from3 = '';\n    this.to3 = '';\n    this.model3 = '';\n    this.plan3 = '';\n    this.target3 = '';\n    this.produced3 = '';\n    this.fpy3 = '';\n    this.description3 = '';\n    this.from4 = '';\n    this.to4 = '';\n    this.model4 = '';\n    this.plan4 = '';\n    this.target4 = '';\n    this.produced4 = '';\n    this.fpy4 = '';\n    this.description4 = '';\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Проекты/WhiteBoardManager/client/src/app/home/home.component.ts","import { RequestOptions } from '@angular/http';\r\n// tslint:disable-next-line:import-blacklist\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { forEach } from '@angular/router/src/utils/collection';\r\nimport { Timeline } from './../../sdk/models/Timeline';\r\nimport { timeInterval } from 'rxjs/operators/timeInterval';\r\n\r\n@Injectable()\r\nexport class MainService {\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  public getCustomers() {\r\n    return this.httpClient.get('http://10.152.5.93:3030/api/customer');\r\n  }\r\n\r\n  public getLines(customerId?: string) {\r\n    if (customerId === undefined) {\r\n      return this.httpClient.get('http://10.152.5.93:3030/api/line');\r\n    } else {\r\n      return this.httpClient.get('http://10.152.5.93:3030/api/customer/' + customerId + '/lines');\r\n    }\r\n  }\r\n\r\n  public getShifts(lineId: string) {\r\n    return this.httpClient.get('http://10.152.5.93:3030/api/line/' + lineId + '/shifts');\r\n  }\r\n\r\n  public getTimeLines(shiftID: string) {\r\n    return this.httpClient.get('http://10.152.5.93:3030/api/shift/' + shiftID + '/timelines');\r\n  }\r\n\r\n  public getTimeLine(timelineId: string) {\r\n    return this.httpClient.get('http://10.152.5.93:3030/api/timeline/' + timelineId);\r\n  }\r\n\r\n  public updateTimeline(timeline: Timeline) {\r\n    const headers = new HttpHeaders();\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append('Content-Type', 'application/x-www-form-urlencoded');\r\n    /*let timeline: Timeline;\r\n    this.getTimeLine(timelineId).subscribe((t: Timeline) => {\r\n      timeline = t;\r\n    });*/\r\n    return this.httpClient.post('http://10.152.5.93:3030/api/timeline', timeline, { headers: headers}).subscribe((data: Timeline) => {\r\n      console.log(data.from);\r\n    });\r\n  }\r\n\r\n  /*public setTimeLine(timelineID: string) {\r\n\r\n    const myheader = new HttpHeaders().set('Content-Type', 'application/json');\r\n    const body = new HttpParams();\r\n    this.httpClient.post('/api', body, {\r\n        headers: myheader),\r\n      }).subscribe();\r\n\r\n    return this.httpClient.post(\r\n      'http://10.152.5.93:3030/api/shift/' + shiftID + '/timelines'\r\n  );\r\n  }*/\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Проекты/WhiteBoardManager/client/src/app/service/main.service.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Проекты/WhiteBoardManager/client/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Проекты/WhiteBoardManager/client/src/main.ts","/* tslint:disable */\n/**\n* @module SDKModule\n* @author Jonathan Casarrubias <t:@johncasarrubias> <gh:jonathan-casarrubias>\n* @license MIT 2016 Jonathan Casarrubias\n* @version 2.1.0\n* @description\n* The SDKModule is a generated Software Development Kit automatically built by\n* the LoopBack SDK Builder open source module.\n*\n* The SDKModule provides Angular 2 >= RC.5 support, which means that NgModules\n* can import this Software Development Kit as follows:\n*\n*\n* APP Route Module Context\n* ============================================================================\n* import { NgModule }       from '@angular/core';\n* import { BrowserModule }  from '@angular/platform-browser';\n* // App Root \n* import { AppComponent }   from './app.component';\n* // Feature Modules\n* import { SDK[Browser|Node|Native]Module } from './shared/sdk/sdk.module';\n* // Import Routing\n* import { routing }        from './app.routing';\n* @NgModule({\n*  imports: [\n*    BrowserModule,\n*    routing,\n*    SDK[Browser|Node|Native]Module.forRoot()\n*  ],\n*  declarations: [ AppComponent ],\n*  bootstrap:    [ AppComponent ]\n* })\n* export class AppModule { }\n*\n**/\nimport { JSONSearchParams } from './services/core/search.params';\nimport { ErrorHandler } from './services/core/error.service';\nimport { LoopBackAuth } from './services/core/auth.service';\nimport { LoggerService } from './services/custom/logger.service';\nimport { SDKModels } from './services/custom/SDKModels';\nimport { InternalStorage, SDKStorage } from './storage/storage.swaps';\nimport { HttpModule } from '@angular/http';\nimport { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CookieBrowser } from './storage/cookie.browser';\nimport { StorageBrowser } from './storage/storage.browser';\nimport { SocketBrowser } from './sockets/socket.browser';\nimport { SocketDriver } from './sockets/socket.driver';\nimport { SocketConnection } from './sockets/socket.connections';\nimport { RealTime } from './services/core/real.time';\nimport { UserApi } from './services/custom/User';\nimport { AccessTokenApi } from './services/custom/AccessToken';\nimport { LineApi } from './services/custom/Line';\nimport { CustomerApi } from './services/custom/Customer';\nimport { ShiftApi } from './services/custom/Shift';\nimport { TimelineApi } from './services/custom/Timeline';\nimport { FamilyApi } from './services/custom/Family';\nimport { TimeCleanApi } from './services/custom/TimeClean';\n/**\n* @module SDKBrowserModule\n* @description\n* This module should be imported when building a Web Application in the following scenarios:\n*\n*  1.- Regular web application\n*  2.- Angular universal application (Browser Portion)\n*  3.- Progressive applications (Angular Mobile, Ionic, WebViews, etc)\n**/\n@NgModule({\n  imports:      [ CommonModule, HttpModule ],\n  declarations: [ ],\n  exports:      [ ],\n  providers:    [\n    ErrorHandler,\n    SocketConnection\n  ]\n})\nexport class SDKBrowserModule {\n  static forRoot(internalStorageProvider: any = {\n    provide: InternalStorage,\n    useClass: CookieBrowser\n  }): ModuleWithProviders {\n    return {\n      ngModule  : SDKBrowserModule,\n      providers : [\n        LoopBackAuth,\n        LoggerService,\n        JSONSearchParams,\n        SDKModels,\n        RealTime,\n        UserApi,\n        AccessTokenApi,\n        LineApi,\n        CustomerApi,\n        ShiftApi,\n        TimelineApi,\n        FamilyApi,\n        TimeCleanApi,\n        internalStorageProvider,\n        { provide: SDKStorage, useClass: StorageBrowser },\n        { provide: SocketDriver, useClass: SocketBrowser }\n      ]\n    };\n  }\n}\n/**\n* Have Fun!!!\n* - Jon\n**/\nexport * from './models/index';\nexport * from './services/index';\nexport * from './lb.config';\nexport * from './storage/storage.swaps';\nexport { CookieBrowser } from './storage/cookie.browser';\nexport { StorageBrowser } from './storage/storage.browser';\n\n\n\n\n// WEBPACK FOOTER //\n// C:/Проекты/WhiteBoardManager/client/src/sdk/index.ts","/* tslint:disable */\n/**\n* @module LoopBackConfig\n* @description\n*\n* The LoopBackConfig module help developers to externally \n* configure the base url and api version for loopback.io\n*\n* Example\n*\n* import { LoopBackConfig } from './sdk';\n* \n* @Component() // No metadata needed for this module\n*\n* export class MyApp {\n*   constructor() {\n*     LoopBackConfig.setBaseURL('http://localhost:3000');\n*     LoopBackConfig.setApiVersion('api');\n*   }\n* }\n**/\nexport class LoopBackConfig {\n  private static path: string = 'http://10.152.5.93:3030';\n  private static version: string | number = 'api';\n  private static authPrefix: string = '';\n  private static debug: boolean = true;\n  private static filterOn: string = 'headers';\n  private static secure: boolean = false;\n  private static withCredentials: boolean = false;\n\n  public static setApiVersion(version: string = 'api'): void {\n    LoopBackConfig.version = version;\n  }\n  \n  public static getApiVersion(): string | number {\n    return LoopBackConfig.version;\n  }\n\n  public static setBaseURL(url: string = '/'): void {\n    LoopBackConfig.path = url;\n  }\n  \n  public static getPath(): string {\n    return LoopBackConfig.path;\n  }\n\n  public static setAuthPrefix(authPrefix: string = ''): void {\n    LoopBackConfig.authPrefix = authPrefix;\n  }\n\n  public static getAuthPrefix(): string {\n    return LoopBackConfig.authPrefix;\n  }\n\n  public static setDebugMode(isEnabled: boolean): void {\n    LoopBackConfig.debug = isEnabled;\n  }\n\n  public static debuggable(): boolean {\n    return LoopBackConfig.debug;\n  }\n\n  public static filterOnUrl(): void {\n    LoopBackConfig.filterOn = 'url';\n  }\n\n  public static filterOnHeaders(): void {\n    LoopBackConfig.filterOn = 'headers';\n  }\n\n  public static isHeadersFilteringSet(): boolean {\n    return (LoopBackConfig.filterOn === 'headers');\n  }\n\n  public static setSecureWebSockets(): void {\n    LoopBackConfig.secure = true;\n  }\n\n  public static unsetSecureWebSockets(): void {\n    LoopBackConfig.secure = false;\n  }\n\n  public static isSecureWebSocketsSet(): boolean {\n    return LoopBackConfig.secure;\n  }\n\n  public static setRequestOptionsCredentials(withCredentials: boolean = false): void {\n    LoopBackConfig.withCredentials = withCredentials;\n  }\n\n  public static getRequestOptionsCredentials(): boolean {\n    return LoopBackConfig.withCredentials;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Проекты/WhiteBoardManager/client/src/sdk/lb.config.ts","/* tslint:disable */\nimport {\n  User\n} from '../index';\n\ndeclare var Object: any;\nexport interface AccessTokenInterface {\n  \"id\"?: string;\n  \"ttl\"?: number;\n  \"scopes\"?: Array<any>;\n  \"created\"?: Date;\n  \"userId\"?: any;\n  user?: User;\n}\n\nexport class AccessToken implements AccessTokenInterface {\n  \"id\": string;\n  \"ttl\": number;\n  \"scopes\": Array<any>;\n  \"created\": Date;\n  \"userId\": any;\n  user: User;\n  constructor(data?: AccessTokenInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `AccessToken`.\n   */\n  public static getModelName() {\n    return \"AccessToken\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of AccessToken for dynamic purposes.\n  **/\n  public static factory(data: AccessTokenInterface): AccessToken{\n    return new AccessToken(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'AccessToken',\n      plural: 'AccessTokens',\n      path: 'AccessTokens',\n      idName: 'id',\n      properties: {\n        \"id\": {\n          name: 'id',\n          type: 'string'\n        },\n        \"ttl\": {\n          name: 'ttl',\n          type: 'number',\n          default: 1209600\n        },\n        \"scopes\": {\n          name: 'scopes',\n          type: 'Array&lt;any&gt;'\n        },\n        \"created\": {\n          name: 'created',\n          type: 'Date'\n        },\n        \"userId\": {\n          name: 'userId',\n          type: 'any'\n        },\n      },\n      relations: {\n        user: {\n          name: 'user',\n          type: 'User',\n          model: 'User',\n          relationType: 'belongsTo',\n                  keyFrom: 'userId',\n          keyTo: 'id'\n        },\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Проекты/WhiteBoardManager/client/src/sdk/models/AccessToken.ts","/* tslint:disable */\n\nimport { AccessToken, AccessTokenInterface } from './AccessToken';\nexport * from './AccessToken';\n\n\n\ndeclare var Object: any;\nexport interface LoopBackFilter {\n  fields?: any;\n  include?: any;\n  limit?: any;\n  order?: any;\n  skip?: any;\n  offset?: any;\n  where?: any;\n}\n\nexport class SDKToken implements AccessTokenInterface {\n  id: any = null;\n  ttl: number = null;\n  scopes: any = null;\n  created: any = null;\n  userId: any = null;\n  user: any = null;\n  rememberMe: boolean = null;\n  constructor(data?: AccessTokenInterface) {\n    Object.assign(this, data);\n  }\n}\n/**\n* This GeoPoint represents both, LoopBack and MongoDB GeoPoint\n**/\nexport interface GeoPoint  {\n    lat?: number;\n    lng?: number;\n    type?: string;\n    coordinates?: number[];\n}\n\nexport interface StatFilter {\n    range: string,\n    custom?: {\n      start: string,\n      end: string\n    },\n    where?: {},\n    groupBy?: string\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Проекты/WhiteBoardManager/client/src/sdk/models/BaseModels.ts","/* tslint:disable */\nimport {\n  Line\n} from '../index';\n\ndeclare var Object: any;\nexport interface CustomerInterface {\n  \"name\": string;\n  \"id\"?: any;\n  lines?: Line[];\n}\n\nexport class Customer implements CustomerInterface {\n  \"name\": string;\n  \"id\": any;\n  lines: Line[];\n  constructor(data?: CustomerInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Customer`.\n   */\n  public static getModelName() {\n    return \"Customer\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of Customer for dynamic purposes.\n  **/\n  public static factory(data: CustomerInterface): Customer{\n    return new Customer(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'Customer',\n      plural: 'customer',\n      path: 'customer',\n      idName: 'id',\n      properties: {\n        \"name\": {\n          name: 'name',\n          type: 'string'\n        },\n        \"id\": {\n          name: 'id',\n          type: 'any'\n        },\n      },\n      relations: {\n        lines: {\n          name: 'lines',\n          type: 'Line[]',\n          model: 'Line',\n          relationType: 'hasMany',\n                  keyFrom: 'id',\n          keyTo: 'customerId'\n        },\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Проекты/WhiteBoardManager/client/src/sdk/models/Customer.ts","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface FamilyInterface {\n  \"name\": string;\n  \"targerFPY\"?: number;\n  \"id\"?: any;\n  \"lineId\"?: any;\n}\n\nexport class Family implements FamilyInterface {\n  \"name\": string;\n  \"targerFPY\": number;\n  \"id\": any;\n  \"lineId\": any;\n  constructor(data?: FamilyInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Family`.\n   */\n  public static getModelName() {\n    return \"Family\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of Family for dynamic purposes.\n  **/\n  public static factory(data: FamilyInterface): Family{\n    return new Family(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'Family',\n      plural: 'family',\n      path: 'family',\n      idName: 'id',\n      properties: {\n        \"name\": {\n          name: 'name',\n          type: 'string'\n        },\n        \"targerFPY\": {\n          name: 'targerFPY',\n          type: 'number'\n        },\n        \"id\": {\n          name: 'id',\n          type: 'any'\n        },\n        \"lineId\": {\n          name: 'lineId',\n          type: 'any'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Проекты/WhiteBoardManager/client/src/sdk/models/Family.ts","/* tslint:disable */\nimport { FireLoopRef } from './index';\n\nexport class FireLoop {\n\n  private references: any = {};\n\n  constructor(private socket: any, private models: { get: Function }) {}\n\n  public ref<T>(model: any): FireLoopRef<T> {\n    let name: string = model.getModelName();\n    model.models = this.models;\n    this.references[name] = new FireLoopRef<T>(model, this.socket);\n    return this.references[name];\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Проекты/WhiteBoardManager/client/src/sdk/models/FireLoop.ts","/* tslint:disable */\nimport 'rxjs/add/observable/merge';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/merge';\nimport { LoopBackFilter, StatFilter } from './index';\nimport { SocketConnection } from '../sockets/socket.connections';\n/**\n * @class FireLoopRef<T>\n * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n * @license MIT\n * @description\n * This class allows to create FireLoop References which will be in sync with\n * Server. It also allows to create FireLoop Reference Childs, that allows to\n * persist data according the generic model relationships.\n **/\nexport class FireLoopRef<T> {\n  // Reference ID\n  private id: number = this.buildId();\n  // Model Instance (For child references, empty on root references)\n  private instance: any;\n  // Model Childs\n  private childs: any = {};\n  // Disposable Events\n  private disposable: { [key: string]: any } = {};\n  /**\n  * @method constructor\n  * @param {any} model The model we want to create a reference\n  * @param {SocketConnection} socket Socket connection to handle events\n  * @param {FireLoopRef<any>} parent Parent FireLoop model reference\n  * @param {string} relationship The defined model relationship\n  * @description\n  * The constructor will receive the required parameters and then will register this reference\n  * into the server, needed to allow multiple references for the same model.\n  * This ids are referenced into this specific client connection and won't have issues\n  * with other client ids.\n  **/\n  constructor(\n    private model: any,\n    private socket: SocketConnection,\n    private parent: FireLoopRef<any> = null,\n    private relationship: string = null\n  ) {\n    this.socket.emit(\n      `Subscribe.${!parent ? model.getModelName() : parent.model.getModelName()}`,\n      { id: this.id, scope: model.getModelName(), relationship: relationship }\n    );\n    return this;\n  }\n  /**\n  * @method dispose\n  * @return {void}\n  * @description\n  * This method is super important to avoid memory leaks in the server.\n  * This method requires to be called on components destroy\n  *\n  * ngOnDestroy() {\n  *  this.someRef.dispose() \n  * }\n  **/\n  public dispose(): void {\n    const subscription = this.operation('dispose', {}).subscribe(() => {\n      Object.keys(this.disposable).forEach((channel: string) => {\n        this.socket.removeListener(channel, this.disposable[channel]);\n        this.socket.removeAllListeners(channel);\n      });\n      subscription.unsubscribe();\n    });\n  }\n  /**\n  * @method upsert\n  * @param {T} data Persisted model instance\n  * @return {Observable<T>}\n  * @description\n  * Operation wrapper for upsert function.\n  **/\n  public upsert(data: T): Observable<T> {\n    return this.operation('upsert', data);\n  }\n  /**\n  * @method create\n  * @param {T} data Persisted model instance\n  * @return {Observable<T>}\n  * @description\n  * Operation wrapper for create function.\n  **/\n  public create(data: T): Observable<T> {\n    return this.operation('create', data);\n  }\n  /**\n  * @method remove\n  * @param {T} data Persisted model instance\n  * @return {Observable<T>}\n  * @description\n  * Operation wrapper for remove function.\n  **/\n  public remove(data: T): Observable<T> {\n    return this.operation('remove', data);\n  }\n  /**\n  * @method remote\n  * @param {string} method Remote method name\n  * @param {any[]=} params Parameters to be applied into the remote method\n  * @param {boolean} broadcast Flag to define if the method results should be broadcasted\n  * @return {Observable<any>}\n  * @description\n  * This method calls for any remote method. It is flexible enough to\n  * allow you call either built-in or custom remote methods.\n  *\n  * FireLoop provides this interface to enable calling remote methods\n  * but also to optionally send any defined accept params that will be\n  * applied within the server.\n  **/\n  public remote(method: string, params?: any[], broadcast: boolean = false): Observable<any> {\n    return this.operation('remote', { method, params, broadcast });\n  }\n  /**\n  * @method onRemote\n  * @param {string} method Remote method name\n  * @return {Observable<any>}\n  * @description\n  * This method listen for public broadcasted remote method results. If the remote method\n  * execution is not public only the owner will receive the result data.\n  **/\n  public onRemote(method: string): Observable<any> {\n    let event: string = 'remote';\n    if (!this.relationship) {\n      event = `${this.model.getModelName()}.${event}`;\n    } else {\n      event = `${this.parent.model.getModelName()}.${this.relationship}.${event}`;\n    }\n    return this.broadcasts(event, {});\n  }\n  /**\n  * @method on\n  * @param {string} event Event name\n  * @param {LoopBackFilter} filter LoopBack query filter\n  * @return {Observable<T>}\n  * @description\n  * Listener for different type of events. Valid events are:\n  *   - change (Triggers on any model change -create, update, remove-)\n  *   - value (Triggers on new entries)\n  *   - child_added (Triggers when a child is added)\n  *   - child_updated (Triggers when a child is updated)\n  *   - child_removed (Triggers when a child is removed)\n  **/\n  public on(event: string, filter: LoopBackFilter = { limit: 100, order: 'id DESC' }): Observable<T | T[]> {\n    if (event === 'remote') {\n      throw new Error('The \"remote\" event is not allowed using \"on()\" method, use \"onRemote()\" instead');\n    }\n    let request: any;\n    if (!this.relationship) {\n      event = `${this.model.getModelName()}.${event}`;\n      request = { filter };\n    } else {\n      event = `${this.parent.model.getModelName()}.${this.relationship}.${event}`;\n      request = { filter, parent: this.parent.instance };\n    }\n    if (event.match(/(value|change|stats)/)) {\n      return Observable.merge(\n        this.pull(event, request),\n        this.broadcasts(event, request)\n      );\n    } else {\n      return this.broadcasts(event, request);\n    }\n  }\n  /**\n  * @method stats\n  * @param {LoopBackFilter=} filter LoopBack query filter\n  * @return {Observable<T>}\n  * @description\n  * Listener for real-time statistics, will trigger on every\n  * statistic modification.\n  * TIP: You can improve performance by adding memcached to LoopBack models.\n  **/\n  public stats(filter?: StatFilter): Observable<T | T[]> {\n    return this.on('stats', filter);\n  }\n  /**\n  * @method make\n  * @param {any} instance Persisted model instance reference\n  * @return {Observable<T>}\n  * @description\n  * This method will set a model instance into this a new FireLoop Reference.\n  * This allows to persiste parentship when creating related instances.\n  *\n  * It also allows to have multiple different persisted instance references to same model.\n  * otherwise if using singleton will replace a previous instance for a new instance, when\n  * we actually want to have more than 1 instance of same model.\n  **/\n  public make(instance: any): FireLoopRef<T> {\n    let reference: FireLoopRef<T> = new FireLoopRef<T>(this.model, this.socket);\n    reference.instance = instance;\n    return reference;\n  }\n  /**\n  * @method child\n  * @param {string} relationship A defined model relationship\n  * @return {FireLoopRef<T>}\n  * @description\n  * This method creates child references, which will persist related model\n  * instances. e.g. Room.messages, where messages belongs to a specific Room.\n  **/\n  public child<T>(relationship: string): FireLoopRef<T> {\n    // Return singleton instance\n    if (this.childs[relationship]) { return this.childs[relationship]; }\n    // Try to get relation settings from current model\n    let settings: any = this.model.getModelDefinition().relations[relationship];\n    // Verify the relationship actually exists\n    if (!settings) {\n      throw new Error(`Invalid model relationship ${this.model.getModelName()} <-> ${relationship}, verify your model settings.`);\n    }\n    // Verify if the relationship model is public\n    if (settings.model === '') {\n      throw new Error(`Relationship model is private, cam't use ${relationship} unless you set your model as public.`);\n    }\n    // Lets get a model reference and add a reference for all of the models\n    let model: any = this.model.models.get(settings.model);\n    model.models = this.model.models;\n    // If everything goes well, we will store a child reference and return it.\n    this.childs[relationship] = new FireLoopRef<T>(model, this.socket, this, relationship);\n    return this.childs[relationship];\n  }\n  /**\n  * @method pull\n  * @param {string} event Event name\n  * @param {any} request Type of request, can be LB-only filter or FL+LB filter\n  * @return {Observable<T>}\n  * @description\n  * This method will pull initial data from server\n  **/\n  private pull(event: string, request: any): Observable<T> {\n    let sbj: Subject<T> = new Subject<T>();\n    let that: FireLoopRef<T> = this;\n    let nowEvent: any = `${event}.pull.requested.${this.id}`;\n    this.socket.emit(`${event}.pull.request.${this.id}`, request);\n    function pullNow(data: any) {\n      if (that.socket.removeListener) {\n        that.socket.removeListener(nowEvent, pullNow);\n      }\n      sbj.next(data);\n    };\n    this.socket.on(nowEvent, pullNow);\n    return sbj.asObservable();\n  }\n  /**\n  * @method broadcasts\n  * @param {string} event Event name\n  * @param {any} request Type of request, can be LB-only filter or FL+LB filter\n  * @return {Observable<T>}\n  * @description\n  * This will listen for public broadcasts announces and then request\n  * for data according a specific client request, not shared with other clients.\n  **/\n  private broadcasts(event: string, request: any): Observable<T> {\n    let sbj: Subject<T> = new Subject<T>();\n    let channels: { announce: string, broadcast: string } = {\n      announce: `${event}.broadcast.announce.${this.id}`,\n      broadcast: `${event}.broadcast.${this.id}`\n    };\n    let that = this;\n    // Announces Handler\n    this.disposable[channels.announce] = function (res: T) {\n      that.socket.emit(`${event}.broadcast.request.${that.id}`, request)\n    };\n    // Broadcasts Handler\n    this.disposable[channels.broadcast] = function (data: any) {\n      sbj.next(data);\n    };\n    this.socket.on(channels.announce, this.disposable[channels.announce]);\n    this.socket.on(channels.broadcast, this.disposable[channels.broadcast]);\n    return sbj.asObservable();\n  }\n  /**\n  * @method operation\n  * @param {string} event Event name\n  * @param {any} data Any type of data sent to the server\n  * @return {Observable<T>}\n  * @description\n  * This internal method will run operations depending on current context \n  **/\n  private operation(event: string, data: any): Observable<T> {\n    if (!this.relationship) {\n      event = `${this.model.getModelName()}.${event}.${this.id}`;\n    } else {\n      event = `${this.parent.model.getModelName()}.${this.relationship}.${event}.${this.id}`;\n    }\n    let subject: Subject<T> = new Subject<T>();\n    let config: { data: any, parent: any } = {\n      data,\n      parent: this.parent && this.parent.instance ? this.parent.instance : null\n    };\n    this.socket.emit(event, config);\n    let resultEvent: string = '';\n    if (!this.relationship) {\n      resultEvent = `${this.model.getModelName()}.value.result.${this.id}`;\n    } else {\n      resultEvent = `${this.parent.model.getModelName()}.${this.relationship}.value.result.${this.id}`;\n    }\n    this.socket.on(resultEvent, (res: any) => {\n      if (res.error) {\n        subject.error(res);\n      } else {\n        subject.next(res);\n      }\n    });\n    if (event.match('dispose')) {\n      setTimeout(() => subject.next());\n    }\n    // This event listener will be wiped within socket.connections\n    this.socket.sharedObservables.sharedOnDisconnect.subscribe(() => subject.complete());\n    return subject.asObservable().catch((error: any) => Observable.throw(error));\n  }\n  /**\n  * @method buildId\n  * @return {number}\n  * @description\n  * This internal method build an ID for this reference, this allows to have\n  * multiple references for the same model or relationships.\n  **/\n  private buildId(): number {\n    return Date.now() + Math.floor(Math.random() * 100800) *\n      Math.floor(Math.random() * 100700) *\n      Math.floor(Math.random() * 198500);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Проекты/WhiteBoardManager/client/src/sdk/models/FireLoopRef.ts","/* tslint:disable */\nimport {\n  Shift,\n  Family,\n  TimeClean\n} from '../index';\n\ndeclare var Object: any;\nexport interface LineInterface {\n  \"name\": string;\n  \"isEnableClean\": boolean;\n  \"isCommonFPY\": boolean;\n  \"messageClean\"?: string;\n  \"timeClean\"?: string;\n  \"targetFPY\"?: number;\n  \"id\"?: any;\n  \"customerId\"?: any;\n  shifts?: Shift[];\n  models?: Family[];\n  timeCleans?: TimeClean[];\n}\n\nexport class Line implements LineInterface {\n  \"name\": string;\n  \"isEnableClean\": boolean;\n  \"isCommonFPY\": boolean;\n  \"messageClean\": string;\n  \"timeClean\": string;\n  \"targetFPY\": number;\n  \"id\": any;\n  \"customerId\": any;\n  shifts: Shift[];\n  models: Family[];\n  timeCleans: TimeClean[];\n  constructor(data?: LineInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Line`.\n   */\n  public static getModelName() {\n    return \"Line\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of Line for dynamic purposes.\n  **/\n  public static factory(data: LineInterface): Line{\n    return new Line(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'Line',\n      plural: 'line',\n      path: 'line',\n      idName: 'id',\n      properties: {\n        \"name\": {\n          name: 'name',\n          type: 'string'\n        },\n        \"isEnableClean\": {\n          name: 'isEnableClean',\n          type: 'boolean',\n          default: false\n        },\n        \"isCommonFPY\": {\n          name: 'isCommonFPY',\n          type: 'boolean',\n          default: true\n        },\n        \"messageClean\": {\n          name: 'messageClean',\n          type: 'string'\n        },\n        \"timeClean\": {\n          name: 'timeClean',\n          type: 'string'\n        },\n        \"targetFPY\": {\n          name: 'targetFPY',\n          type: 'number'\n        },\n        \"id\": {\n          name: 'id',\n          type: 'any'\n        },\n        \"customerId\": {\n          name: 'customerId',\n          type: 'any'\n        },\n      },\n      relations: {\n        shifts: {\n          name: 'shifts',\n          type: 'Shift[]',\n          model: 'Shift',\n          relationType: 'hasMany',\n                  keyFrom: 'id',\n          keyTo: 'lineId'\n        },\n        models: {\n          name: 'models',\n          type: 'Family[]',\n          model: 'Family',\n          relationType: 'hasMany',\n                  keyFrom: 'id',\n          keyTo: 'lineId'\n        },\n        timeCleans: {\n          name: 'timeCleans',\n          type: 'TimeClean[]',\n          model: 'TimeClean',\n          relationType: 'hasMany',\n                  keyFrom: 'id',\n          keyTo: 'lineId'\n        },\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Проекты/WhiteBoardManager/client/src/sdk/models/Line.ts","/* tslint:disable */\nimport {\n  Timeline\n} from '../index';\n\ndeclare var Object: any;\nexport interface ShiftInterface {\n  \"name\": string;\n  \"nextShift\"?: string;\n  \"isEnable\"?: boolean;\n  \"id\"?: any;\n  \"lineId\"?: any;\n  timelines?: Timeline[];\n}\n\nexport class Shift implements ShiftInterface {\n  \"name\": string;\n  \"nextShift\": string;\n  \"isEnable\": boolean;\n  \"id\": any;\n  \"lineId\": any;\n  timelines: Timeline[];\n  constructor(data?: ShiftInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Shift`.\n   */\n  public static getModelName() {\n    return \"Shift\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of Shift for dynamic purposes.\n  **/\n  public static factory(data: ShiftInterface): Shift{\n    return new Shift(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'Shift',\n      plural: 'shift',\n      path: 'shift',\n      idName: 'id',\n      properties: {\n        \"name\": {\n          name: 'name',\n          type: 'string'\n        },\n        \"nextShift\": {\n          name: 'nextShift',\n          type: 'string'\n        },\n        \"isEnable\": {\n          name: 'isEnable',\n          type: 'boolean',\n          default: true\n        },\n        \"id\": {\n          name: 'id',\n          type: 'any'\n        },\n        \"lineId\": {\n          name: 'lineId',\n          type: 'any'\n        },\n      },\n      relations: {\n        timelines: {\n          name: 'timelines',\n          type: 'Timeline[]',\n          model: 'Timeline',\n          relationType: 'hasMany',\n                  keyFrom: 'id',\n          keyTo: 'shiftId'\n        },\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Проекты/WhiteBoardManager/client/src/sdk/models/Shift.ts","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface TimeCleanInterface {\n  \"time\": string;\n  \"id\"?: any;\n  \"lineId\"?: any;\n}\n\nexport class TimeClean implements TimeCleanInterface {\n  \"time\": string;\n  \"id\": any;\n  \"lineId\": any;\n  constructor(data?: TimeCleanInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `TimeClean`.\n   */\n  public static getModelName() {\n    return \"TimeClean\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of TimeClean for dynamic purposes.\n  **/\n  public static factory(data: TimeCleanInterface): TimeClean{\n    return new TimeClean(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'TimeClean',\n      plural: 'timeClean',\n      path: 'timeClean',\n      idName: 'id',\n      properties: {\n        \"time\": {\n          name: 'time',\n          type: 'string'\n        },\n        \"id\": {\n          name: 'id',\n          type: 'any'\n        },\n        \"lineId\": {\n          name: 'lineId',\n          type: 'any'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Проекты/WhiteBoardManager/client/src/sdk/models/TimeClean.ts","/* tslint:disable */\n\ndeclare var Object: any;\nexport interface TimelineInterface {\n  \"from\"?: string;\n  \"to\"?: string;\n  \"plan\": number;\n  \"target\": number;\n  \"produced\"?: number;\n  \"description\"?: string;\n  \"fpy\"?: number;\n  \"model\"?: string;\n  \"id\"?: any;\n  \"shiftId\"?: any;\n}\n\nexport class Timeline implements TimelineInterface {\n  \"from\": string;\n  \"to\": string;\n  \"plan\": number;\n  \"target\": number;\n  \"produced\": number;\n  \"description\": string;\n  \"fpy\": number;\n  \"model\": string;\n  \"id\": any;\n  \"shiftId\": any;\n  constructor(data?: TimelineInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Timeline`.\n   */\n  public static getModelName() {\n    return \"Timeline\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of Timeline for dynamic purposes.\n  **/\n  public static factory(data: TimelineInterface): Timeline{\n    return new Timeline(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'Timeline',\n      plural: 'timeline',\n      path: 'timeline',\n      idName: 'id',\n      properties: {\n        \"from\": {\n          name: 'from',\n          type: 'string'\n        },\n        \"to\": {\n          name: 'to',\n          type: 'string'\n        },\n        \"plan\": {\n          name: 'plan',\n          type: 'number'\n        },\n        \"target\": {\n          name: 'target',\n          type: 'number',\n          default: 0\n        },\n        \"produced\": {\n          name: 'produced',\n          type: 'number',\n          default: 0\n        },\n        \"description\": {\n          name: 'description',\n          type: 'string'\n        },\n        \"fpy\": {\n          name: 'fpy',\n          type: 'number',\n          default: 0\n        },\n        \"model\": {\n          name: 'model',\n          type: 'string'\n        },\n        \"id\": {\n          name: 'id',\n          type: 'any'\n        },\n        \"shiftId\": {\n          name: 'shiftId',\n          type: 'any'\n        },\n      },\n      relations: {\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Проекты/WhiteBoardManager/client/src/sdk/models/Timeline.ts","/* tslint:disable */\nimport {\n  AccessToken\n} from '../index';\n\ndeclare var Object: any;\nexport interface UserInterface {\n  \"realm\"?: string;\n  \"username\"?: string;\n  \"email\": string;\n  \"emailVerified\"?: boolean;\n  \"id\"?: any;\n  \"password\"?: string;\n  accessTokens?: AccessToken[];\n}\n\nexport class User implements UserInterface {\n  \"realm\": string;\n  \"username\": string;\n  \"email\": string;\n  \"emailVerified\": boolean;\n  \"id\": any;\n  \"password\": string;\n  accessTokens: AccessToken[];\n  constructor(data?: UserInterface) {\n    Object.assign(this, data);\n  }\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `User`.\n   */\n  public static getModelName() {\n    return \"User\";\n  }\n  /**\n  * @method factory\n  * @author Jonathan Casarrubias\n  * @license MIT\n  * This method creates an instance of User for dynamic purposes.\n  **/\n  public static factory(data: UserInterface): User{\n    return new User(data);\n  }\n  /**\n  * @method getModelDefinition\n  * @author Julien Ledun\n  * @license MIT\n  * This method returns an object that represents some of the model\n  * definitions.\n  **/\n  public static getModelDefinition() {\n    return {\n      name: 'User',\n      plural: 'Users',\n      path: 'Users',\n      idName: 'id',\n      properties: {\n        \"realm\": {\n          name: 'realm',\n          type: 'string'\n        },\n        \"username\": {\n          name: 'username',\n          type: 'string'\n        },\n        \"email\": {\n          name: 'email',\n          type: 'string'\n        },\n        \"emailVerified\": {\n          name: 'emailVerified',\n          type: 'boolean'\n        },\n        \"id\": {\n          name: 'id',\n          type: 'any'\n        },\n        \"password\": {\n          name: 'password',\n          type: 'string'\n        },\n      },\n      relations: {\n        accessTokens: {\n          name: 'accessTokens',\n          type: 'AccessToken[]',\n          model: 'AccessToken',\n          relationType: 'hasMany',\n                  keyFrom: 'id',\n          keyTo: 'userId'\n        },\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Проекты/WhiteBoardManager/client/src/sdk/models/User.ts","/* tslint:disable */\nexport * from './User';\nexport * from './AccessToken';\nexport * from './Line';\nexport * from './Customer';\nexport * from './Shift';\nexport * from './Timeline';\nexport * from './Family';\nexport * from './TimeClean';\nexport * from './BaseModels';\nexport * from './FireLoopRef';\n\n\n\n// WEBPACK FOOTER //\n// C:/Проекты/WhiteBoardManager/client/src/sdk/models/index.ts","/* tslint:disable */\ndeclare var Object: any;\nimport { Injectable, Inject } from '@angular/core';\nimport { InternalStorage } from '../../storage/storage.swaps';\nimport { SDKToken } from '../../models/BaseModels';\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\n* @module SocketConnection\n* @license MIT\n* @description\n* This module handle socket connections and return singleton instances for each\n* connection, it will use the SDK Socket Driver Available currently supporting\n* Angular 2 for web, NativeScript 2 and Angular Universal.\n**/\n@Injectable()\nexport class LoopBackAuth {\n  /**\n   * @type {SDKToken}\n   **/\n  private token: SDKToken = new SDKToken();\n  /**\n   * @type {string}\n   **/\n  protected prefix: string = '$LoopBackSDK$';\n  /**\n   * @method constructor\n   * @param {InternalStorage} storage Internal Storage Driver\n   * @description\n   * The constructor will initialize the token loading data from storage\n   **/\n  constructor(@Inject(InternalStorage) protected storage: InternalStorage) {\n    this.token.id = this.load('id');\n    this.token.user = this.load('user');\n    this.token.userId = this.load('userId');\n    this.token.created = this.load('created');\n    this.token.ttl = this.load('ttl');\n    this.token.rememberMe = this.load('rememberMe');\n  }\n  /**\n   * @method setRememberMe\n   * @param {boolean} value Flag to remember credentials\n   * @return {void}\n   * @description\n   * This method will set a flag in order to remember the current credentials\n   **/\n  public setRememberMe(value: boolean): void {\n    this.token.rememberMe = value;\n  }\n  /**\n   * @method setUser\n   * @param {any} user Any type of user model\n   * @return {void}\n   * @description\n   * This method will update the user information and persist it if the\n   * rememberMe flag is set.\n   **/\n  public setUser(user: any) {\n    this.token.user = user;\n    this.save();\n  }\n  /**\n   * @method setToken\n   * @param {SDKToken} token SDKToken or casted AccessToken instance\n   * @return {void}\n   * @description\n   * This method will set a flag in order to remember the current credentials\n   **/\n  public setToken(token: SDKToken): void {\n    this.token = Object.assign({}, this.token, token);\n    this.save();\n  }\n  /**\n   * @method getToken\n   * @return {void}\n   * @description\n   * This method will set a flag in order to remember the current credentials.\n   **/\n  public getToken(): SDKToken {\n    return <SDKToken>this.token;\n  }\n  /**\n   * @method getAccessTokenId\n   * @return {string}\n   * @description\n   * This method will return the actual token string, not the object instance.\n   **/\n  public getAccessTokenId(): string {\n    return this.token.id;\n  }\n  /**\n   * @method getCurrentUserId\n   * @return {any}\n   * @description\n   * This method will return the current user id, it can be number or string.\n   **/\n  public getCurrentUserId(): any {\n    return this.token.userId;\n  }\n  /**\n   * @method getCurrentUserData\n   * @return {any}\n   * @description\n   * This method will return the current user instance.\n   **/\n  public getCurrentUserData(): any {\n    return (typeof this.token.user === 'string') ? JSON.parse(this.token.user) : this.token.user;\n  }\n  /**\n   * @method save\n   * @return {boolean} Whether or not the information was saved\n   * @description\n   * This method will save in either local storage or cookies the current credentials.\n   * But only if rememberMe is enabled.\n   **/\n  public save(): boolean {\n      let today = new Date();\n      let expires = new Date(today.getTime() + (this.token.ttl * 1000));\n      this.persist('id', this.token.id, expires);\n      this.persist('user', this.token.user, expires);\n      this.persist('userId', this.token.userId, expires);\n      this.persist('created', this.token.created, expires);\n      this.persist('ttl', this.token.ttl, expires);\n      this.persist('rememberMe', this.token.rememberMe, expires);\n      return true;\n  };\n  /**\n   * @method load\n   * @param {string} prop Property name\n   * @return {any} Any information persisted in storage\n   * @description\n   * This method will load either from local storage or cookies the provided property.\n   **/\n  protected load(prop: string): any {\n    return this.storage.get(`${this.prefix}${prop}`);\n  }\n  /**\n   * @method clear\n   * @return {void}\n   * @description\n   * This method will clear cookies or the local storage.\n   **/\n  public clear(): void {\n    Object.keys(this.token).forEach((prop: string) => this.storage.remove(`${this.prefix}${prop}`));\n    this.token = new SDKToken();\n  }\n  /**\n   * @method persist\n   * @return {void}\n   * @description\n   * This method saves values to storage\n   **/\n  protected persist(prop: string, value: any, expires?: Date): void {\n    try {\n      this.storage.set(\n        `${this.prefix}${prop}`,\n        (typeof value === 'object') ? JSON.stringify(value) : value,\n        this.token.rememberMe?expires:null\n      );\n    }\n    catch (err) {\n      console.error('Cannot access local/session storage:', err);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Проекты/WhiteBoardManager/client/src/sdk/services/core/auth.service.ts","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { Http, Headers, Request, RequestOptions } from '@angular/http';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { JSONSearchParams } from './search.params';\nimport { ErrorHandler } from './error.service';\nimport { LoopBackAuth } from './auth.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackFilter, AccessToken } from '../../models/BaseModels';\nimport { SDKModels } from '../custom/SDKModels';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport { ErrorObservable } from 'rxjs/observable/ErrorObservable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport { SocketConnection } from '../../sockets/socket.connections';\n// Making Sure EventSource Type is available to avoid compilation issues.\ndeclare var EventSource: any;\n/**\n* @module BaseLoopBackApi\n* @author Jonathan Casarrubias <@johncasarrubias> <github:jonathan-casarrubias>\n* @author Nikolay Matiushenkov <https://github.com/mnvx>\n* @license MIT\n* @description\n* Abstract class that will be implemented in every custom service automatically built\n* by the sdk builder.\n* It provides the core functionallity for every API call, either by HTTP Calls or by\n* WebSockets.\n**/\n@Injectable()\nexport abstract class BaseLoopBackApi {\n\n  protected path: string;\n  protected model: any;\n\n  constructor(\n    @Inject(Http) protected http: Http,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Inject(JSONSearchParams) protected searchParams: JSONSearchParams,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    this.model = this.models.get(this.getModelName());\n  }\n  /**\n   * @method request\n   * @param {string}  method      Request method (GET, POST, PUT)\n   * @param {string}  url         Request url (my-host/my-url/:id)\n   * @param {any}     routeParams Values of url parameters\n   * @param {any}     urlParams   Parameters for building url (filter and other)\n   * @param {any}     postBody    Request postBody\n   * @return {Observable<any>}\n   * @description\n   * This is a core method, every HTTP Call will be done from here, every API Service will\n   * extend this class and use this method to get RESTful communication.\n   **/\n  public request(\n    method         : string,\n    url            : string,\n    routeParams    : any = {},\n    urlParams      : any = {},\n    postBody       : any = {},\n    pubsub         : boolean = false,\n    customHeaders? : Function\n  ): Observable<any> {\n    // Transpile route variables to the actual request Values\n    Object.keys(routeParams).forEach((key: string) => {\n      url = url.replace(new RegExp(\":\" + key + \"(\\/|$)\", \"g\"), routeParams[key] + \"$1\")\n    });\n    if (pubsub) {\n      if (url.match(/fk/)) {\n        let arr = url.split('/'); arr.pop();\n        url = arr.join('/');\n      }\n      let event: string = (`[${method}]${url}`).replace(/\\?/, '');\n      let subject: Subject<any> = new Subject<any>();\n      this.connection.on(event, (res: any) => subject.next(res));\n      return subject.asObservable();\n    } else {\n      // Headers to be sent\n      let headers: Headers = new Headers();\n      headers.append('Content-Type', 'application/json');\n      // headers.append('withCredentials', 'true');\n      /*headers.append('Access-Control-Allow-Methods', 'DELETE, HEAD, GET, OPTIONS, POST, PUT');\n      headers.append('Access-Control-Allow-Headers', 'Content-Type, Content-Range, Content-Disposition, Content-Description');*/\n      // Authenticate request\n     \n      \n      //this.authenticate(url, headers);\n      // Body fix for built in remote methods using \"data\", \"options\" or \"credentials\n      // that are the actual body, Custom remote method properties are different and need\n      // to be wrapped into a body object\n      let body: any;\n      let postBodyKeys = typeof postBody === 'object' ? Object.keys(postBody) : []\n      if (postBodyKeys.length === 1) {\n        body = postBody[postBodyKeys.shift()];\n      } else {\n        body = postBody;\n      }\n      let filter: string = '';\n      // Separate filter object from url params and add to search query\n      if (urlParams.filter) {\n        if (LoopBackConfig.isHeadersFilteringSet()) {\n          headers.append('filter', JSON.stringify(urlParams.filter));\n        } else {\n          filter = `?filter=${ encodeURIComponent(JSON.stringify(urlParams.filter))}`;\n        }\n        delete urlParams.filter;\n      }\n      // Separate where object from url params and add to search query\n      /**\n      CODE BELOW WILL GENERATE THE FOLLOWING ISSUES:\n      - https://github.com/mean-expert-official/loopback-sdk-builder/issues/356\n      - https://github.com/mean-expert-official/loopback-sdk-builder/issues/328 \n      if (urlParams.where) {\n        headers.append('where', JSON.stringify(urlParams.where));\n        delete urlParams.where;\n      }\n      **/\n      if (typeof customHeaders === 'function') {\n        headers = customHeaders(headers);\n      }\n      this.searchParams.setJSON(urlParams);\n      let request: Request = new Request(\n        new RequestOptions({\n          headers        : headers,\n          method         : method,\n          url            : `${url}${filter}`,\n          search         : Object.keys(urlParams).length > 0 ? this.searchParams.getURLSearchParams() : null,\n          body           : body ? JSON.stringify(body) : undefined,\n          withCredentials: LoopBackConfig.getRequestOptionsCredentials()\n        })\n      );\n      return this.http.request(request)\n        .map((res: any) => (res.text() != \"\" ? res.json() : {}))\n        .catch((e) => this.errorHandler.handleError(e));\n    }\n  }\n  /**\n   * @method authenticate\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @param {string} url Server URL\n   * @param {Headers} headers HTTP Headers\n   * @return {void}\n   * @description\n   * This method will try to authenticate using either an access_token or basic http auth\n   */\n  public authenticate<T>(url: string, headers: Headers): void {\n    if (this.auth.getAccessTokenId()) {\n      headers.append(\n        'Authorization',\n        LoopBackConfig.getAuthPrefix() + this.auth.getAccessTokenId()\n      );\n    }\n  }\n  /**\n   * @method create\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @param {T} data Generic data type\n   * @return {Observable<T>}\n   * @description\n   * Generic create method\n   */\n  public create<T>(data: T, customHeaders?: Function): Observable<T> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path\n    ].join('/'), undefined, undefined, { data }, null, customHeaders).map((data: T) => this.model.factory(data));\n  }\n  /**\n   * @method onCreate\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @param {T[]} data Generic data type array\n   * @return {Observable<T[]>}\n   * @description\n   * Generic pubsub oncreate many method\n   */\n  public onCreate<T>(data: T[]): Observable<T[]> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path\n    ].join('/'), undefined, undefined, { data }, true)\n    .map((datum: T[]) => datum.map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method createMany\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @param {T[]} data Generic data type array\n   * @return {Observable<T[]>}\n   * @description\n   * Generic create many method\n   */\n  public createMany<T>(data: T[], customHeaders?: Function): Observable<T[]> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path\n    ].join('/'), undefined, undefined, { data }, null, customHeaders)\n    .map((datum: T[]) => datum.map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method onCreateMany\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @param {T[]} data Generic data type array\n   * @return {Observable<T[]>}\n   * @description\n   * Generic create many method\n   */\n  public onCreateMany<T>(data: T[]): Observable<T[]> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path\n    ].join('/'), undefined, undefined, { data }, true)\n    .map((datum: T[]) => datum.map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method findById\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @param {any} data Generic data type\n   * @return {Observable<T>}\n   * @description\n   * Generic findById method\n   */\n  public findById<T>(id: any, filter: LoopBackFilter = {}, customHeaders?: Function): Observable<T> {\n    let _urlParams: any = {};\n    if (filter) _urlParams.filter = filter;\n    return this.request('GET', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id'\n    ].join('/'), { id }, _urlParams, undefined, null, customHeaders)\n    .map((data: T) => this.model.factory(data));\n  }\n  /**\n   * @method find\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T[+>}\n   * @description\n   * Generic find method\n   */\n  public find<T>(filter: LoopBackFilter = {}, customHeaders?: Function): Observable<T[]> {\n    return this.request('GET', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path\n    ].join('/'), undefined, { filter }, undefined, null, customHeaders)\n    .map((datum: T[]) => datum.map((data: T) => this.model.factory(data)));\n  }\n  /**\n   * @method exists\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T[]>}\n   * @description\n   * Generic exists method\n   */\n  public exists<T>(id: any, customHeaders?: Function): Observable<T> {\n    return this.request('GET', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id/exists'\n    ].join('/'), { id }, undefined, undefined, null, customHeaders);\n  }\n  /**\n   * @method findOne\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic findOne method\n   */\n  public findOne<T>(filter: LoopBackFilter = {}, customHeaders?: Function): Observable<T> {\n    return this.request('GET', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'findOne'\n    ].join('/'), undefined, { filter }, undefined, null, customHeaders)\n    .map((data: T) => this.model.factory(data));\n  }\n  /**\n   * @method updateAll\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T[]>}\n   * @description\n   * Generic updateAll method\n   */\n  public updateAll<T>(where: any = {}, data: T, customHeaders?: Function): Observable<{ count: 'number' }> {\n    let _urlParams: any = {};\n    if (where) _urlParams.where = where;\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'update'\n    ].join('/'), undefined, _urlParams, { data }, null, customHeaders);\n  }\n  /**\n   * @method onUpdateAll\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T[]>}\n   * @description\n   * Generic pubsub onUpdateAll method\n   */\n  public onUpdateAll<T>(where: any = {}, data: T): Observable<{ count: 'number' }> {\n    let _urlParams: any = {};\n    if (where) _urlParams.where = where;\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'update'\n    ].join('/'), undefined, _urlParams, { data }, true);\n  }\n  /**\n   * @method deleteById\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic deleteById method\n   */\n  public deleteById<T>(id: any, customHeaders?: Function): Observable<T> {\n    return this.request('DELETE', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id'\n    ].join('/'), { id }, undefined, undefined, null, customHeaders)\n    .map((data: T) => this.model.factory(data));\n  }\n  /**\n   * @method onDeleteById\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic pubsub onDeleteById method\n   */\n  public onDeleteById<T>(id: any): Observable<T> {\n    return this.request('DELETE', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id'\n    ].join('/'), { id }, undefined, undefined, true).map((data: T) => this.model.factory(data));\n  }\n  /**\n   * @method count\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<{ count: number }>}\n   * @description\n   * Generic count method\n   */\n  public count(where: any = {}, customHeaders?: Function): Observable<{ count: number }> {\n    let _urlParams: any = {};\n    if (where) _urlParams.where = where;\n    return this.request('GET', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'count'\n    ].join('/'), undefined, _urlParams, undefined, null, customHeaders);\n  }\n  /**\n   * @method updateAttributes\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic updateAttributes method\n   */\n  public updateAttributes<T>(id: any, data: T, customHeaders?: Function): Observable<T> {\n    return this.request('PUT', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id'\n    ].join('/'), { id }, undefined, { data }, null, customHeaders)\n    .map((data: T) => this.model.factory(data));\n  }\n  /**\n   * @method onUpdateAttributes\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic onUpdateAttributes method\n   */\n  public onUpdateAttributes<T>(id: any, data: T): Observable<T> {\n    return this.request('PUT', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id'\n    ].join('/'), { id }, undefined, { data }, true).map((data: T) => this.model.factory(data));\n  }\n  /**\n   * @method upsert\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic upsert method\n   */\n  public upsert<T>(data: any = {}, customHeaders?: Function): Observable<T> {\n    return this.request('PUT', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n    ].join('/'), undefined, undefined, { data }, null, customHeaders)\n    .map((data: T) => this.model.factory(data));\n  }\n  /**\n   * @method onUpsert\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic pubsub onUpsert method\n   */\n  public onUpsert<T>(data: any = {}): Observable<T> {\n    return this.request('PUT', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n    ].join('/'), undefined, undefined, { data }, true).map((data: T) => this.model.factory(data));\n  }\n  /**\n   * @method upsertPatch\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic upsert method using patch http method\n   */\n  public upsertPatch<T>(data: any = {}, customHeaders?: Function): Observable<T> {\n    return this.request('PATCH', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n    ].join('/'), undefined, undefined, { data }, null, customHeaders)\n    .map((data: T) => this.model.factory(data));\n  }\n  /**\n   * @method onUpsertPatch\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic pubsub onUpsertPatch method using patch http method\n   */\n  public onUpsertPatch<T>(data: any = {}): Observable<T> {\n    return this.request('PATCH', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n    ].join('/'), undefined, undefined, { data }, true).map((data: T) => this.model.factory(data));\n  }\n  /**\n   * @method upsertWithWhere\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic upsertWithWhere method\n   */\n  public upsertWithWhere<T>(where: any = {}, data: any = {}, customHeaders?: Function): Observable<T> {\n    let _urlParams: any = {};\n    if (where) _urlParams.where = where;\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'upsertWithWhere'\n    ].join('/'), undefined, _urlParams, { data }, null, customHeaders)\n    .map((data: T) => this.model.factory(data));\n  }\n  /**\n   * @method onUpsertWithWhere\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic pubsub onUpsertWithWhere method\n   */\n  public onUpsertWithWhere<T>(where: any = {}, data: any = {}): Observable<T> {\n    let _urlParams: any = {};\n    if (where) _urlParams.where = where;\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'upsertWithWhere'\n    ].join('/'), undefined, _urlParams, { data }, true).map((data: T) => this.model.factory(data));\n  }\n  /**\n   * @method replaceOrCreate\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic replaceOrCreate method\n   */\n  public replaceOrCreate<T>(data: any = {}, customHeaders?: Function): Observable<T> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'replaceOrCreate'\n    ].join('/'), undefined, undefined, { data }, null, customHeaders)\n    .map((data: T) => this.model.factory(data));\n  }\n  /**\n   * @method onReplaceOrCreate\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic onReplaceOrCreate method\n   */\n  public onReplaceOrCreate<T>(data: any = {}): Observable<T> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      'replaceOrCreate'\n    ].join('/'), undefined, undefined, { data }, true).map((data: T) => this.model.factory(data));\n  }\n  /**\n   * @method replaceById\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic replaceById method\n   */\n  public replaceById<T>(id: any, data: any = {}, customHeaders?: Function): Observable<T> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id', 'replace'\n    ].join('/'), { id }, undefined, { data }, null, customHeaders)\n    .map((data: T) => this.model.factory(data));\n  }\n  /**\n   * @method onReplaceById\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<T>}\n   * @description\n   * Generic onReplaceById method\n   */\n  public onReplaceById<T>(id: any, data: any = {}): Observable<T> {\n    return this.request('POST', [\n      LoopBackConfig.getPath(),\n      LoopBackConfig.getApiVersion(),\n      this.model.getModelDefinition().path,\n      ':id', 'replace'\n    ].join('/'), { id }, undefined, { data }, true).map((data: T) => this.model.factory(data));\n  }\n  /**\n   * @method createChangeStream\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {Observable<any>}\n   * @description\n   * Generic createChangeStream method\n   */\n  public createChangeStream(): Observable<any> {\n    let subject = new Subject();\n    if (typeof EventSource !== 'undefined') {\n      let emit   = (msg: any) => subject.next(JSON.parse(msg.data));\n      var source = new EventSource([\n        LoopBackConfig.getPath(),\n        LoopBackConfig.getApiVersion(),\n        this.model.getModelDefinition().path,\n        'change-stream'\n      ].join('/'));\n      source.addEventListener('data', emit);\n      source.onerror = emit;\n    } else {\n      console.warn('SDK Builder: EventSource is not supported'); \n    }\n    return subject.asObservable();\n  }\n  /**\n   * @method getModelName\n   * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n   * @license MIT\n   * @return {string}\n   * @description\n   * Abstract getModelName method\n   */\n  abstract getModelName(): string;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Проекты/WhiteBoardManager/client/src/sdk/services/core/base.service.ts","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { Response } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\n//import { ErrorObservable } from 'rxjs/observable/ErrorObservable';\nimport 'rxjs/add/observable/throw';\n/**\n * Default error handler\n */\n@Injectable()\nexport class ErrorHandler {\n  // ErrorObservable when rxjs version < rc.5\n  // ErrorObservable<string> when rxjs version = rc.5\n  // I'm leaving any for now to avoid breaking apps using both versions\n  public handleError(error: Response): any {\n    return Observable.throw(error.json().error || 'Server error');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Проекты/WhiteBoardManager/client/src/sdk/services/core/error.service.ts","/* tslint:disable */\nexport * from './auth.service';\nexport * from './error.service';\nexport * from './search.params';\nexport * from './base.service';\nexport * from './real.time';\n\n\n\n// WEBPACK FOOTER //\n// C:/Проекты/WhiteBoardManager/client/src/sdk/services/core/index.ts","/* tslint:disable */\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\n\nexport class IO {\n\n  private socket: any;\n  private observables: any = {};\n\n  constructor(socket: any) { this.socket = socket; }\n\n  emit(event: string, data: any): void {\n    this.socket.emit('ME:RT:1://event', {\n        event : event,\n        data  : data\n    });\n  }\n\n  on(event: string): Observable<any> {\n    if (this.observables[event]) { return this.observables[event]; }\n    let subject: Subject<any> = new Subject<any>();\n    this.socket.on(event, (res: any) => subject.next(res));\n    this.observables[event] = subject.asObservable();\n    return this.observables[event];\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Проекты/WhiteBoardManager/client/src/sdk/services/core/io.service.ts","/* tslint:disable */\nimport 'rxjs/add/operator/share';\nimport { Injectable, Inject } from '@angular/core';\nimport { IO } from './io.service';\nimport { LoopBackAuth } from './auth.service';\nimport { FireLoop } from '../../models/FireLoop';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { SDKModels } from '../custom/SDKModels';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/share';\nimport { Subject } from 'rxjs/Subject';\nimport { Subscription } from 'rxjs/Subscription';\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@johncasarrubias>\n* @module RealTime\n* @license MIT\n* @description\n* This module is a real-time interface for using socket connections, its main purpose\n* is to make sure that when there is a valid connection, it will create instances\n* of the different real-time functionalities like FireLoop, PubSub and IO.\n**/\n@Injectable()\nexport class RealTime {\n  public IO: IO;\n  public FireLoop: FireLoop;\n  private connecting: boolean = false;\n  private onReadySubject: Subject<string> = new Subject<string>();\n  private sharedOnReady: Observable<string> = this.onReadySubject.asObservable().share();\n  /**\n  * @method constructor\n  * @param {SocketConnection} connection WebSocket connection service\n  * @param {SDKModels} models Model provider service\n  * @param {LoopBackAuth} auth LoopBack authentication service\n  * @description\n  * It will intialize the shared on ready communication channel.\n  **/\n  constructor(\n    @Inject(SocketConnection) public connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth\n  ) {\n    this.sharedOnReady.subscribe();\n  }\n  /**\n  * @method onDisconnect\n  * @return {Observable<any>} \n  * @description\n  * Will trigger when Real-Time Service is disconnected from server.\n  **/\n  onDisconnect(): Observable<any> {\n    return this.connection.sharedObservables.sharedOnDisconnect;\n  }\n  /**\n  * @method onAuthenticated\n  * @return {Observable<any>} \n  * @description\n  * Will trigger when Real-Time Service is authenticated with the server.\n  **/\n  onAuthenticated(): Observable<any> {\n    return this.connection.sharedObservables.sharedOnAuthenticated;\n  }\n  /**\n  * @method onUnAuthorized\n  * @return {Observable<any>} \n  * @description\n  * Will trigger when Real-Time Service is not authorized to connect with the server.\n  **/\n  onUnAuthorized(): Observable<any> {\n    return this.connection.sharedObservables.sharedOnUnAuthorized;\n  }\n  /**\n  * @method onReady\n  * @return {Observable<any>} \n  * @description\n  * Will trigger when Real-Time Service is Ready for broadcasting.\n  * and will register connection flow events to notify subscribers.\n  **/\n  public onReady(): Observable<any> {\n    // If there is a valid connection, then we just send back to the EventLoop\n    // Or next will be executed before the actual subscription.\n    if (this.connection.isConnected()) {\n      let to = setTimeout(() => {\n        this.onReadySubject.next('shared-connection');\n        clearTimeout(to);\n      });\n    // Else if there is a current attempt of connection we wait for the prior\n    // process that started the connection flow.\n    } else if (this.connecting) {\n      let ti = setInterval(() => {\n        if (this.connection.isConnected()) {\n          this.onReadySubject.next('shared-connection');\n          clearInterval(ti);\n        }\n      }, 500);\n    // If there is not valid connection or attempt, then we start the connection flow\n    // and make sure we notify all the onReady subscribers when done.\n    // Also it will listen for desconnections so we unsubscribe and avoid both:\n    // Memory leaks and duplicated triggered events.\n    } else {\n      this.connecting = true;\n      this.connection.connect(this.auth.getToken());\n      this.IO       = new IO(this.connection);\n      this.FireLoop = new FireLoop(this.connection, this.models);\n      // Fire event for those subscribed \n      let s1: Subscription = this.connection.sharedObservables.sharedOnConnect.subscribe(() => {\n        console.log('Real-Time connection has been established');\n        this.connecting = false;\n        this.onReadySubject.next('connected');\n        let s2: Subscription = this.connection.sharedObservables.sharedOnDisconnect.subscribe(() => {\n          s1.unsubscribe();\n          s2.unsubscribe();\n        });\n      });\n    }\n    return this.sharedOnReady;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Проекты/WhiteBoardManager/client/src/sdk/services/core/real.time.ts","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { URLSearchParams } from '@angular/http';\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\n* @module JSONSearchParams\n* @license MIT\n* @description\n* JSON Parser and Wrapper for the Angular2 URLSearchParams\n* This module correctly encodes a json object into a query string and then creates\n* an instance of the URLSearchParams component for later use in HTTP Calls\n**/\n@Injectable()\nexport class JSONSearchParams {\n\n    private _usp: URLSearchParams;\n\n    public setJSON(obj: any) {\n        this._usp = new URLSearchParams(this._JSON2URL(obj, false));\n    }\n\n    public getURLSearchParams(): URLSearchParams {\n        return this._usp;\n    }\n\n    private _JSON2URL(obj: any, parent: any) {\n        var parts: any = [];\n        for (var key in obj)\n        parts.push(this._parseParam(key, obj[key], parent));\n        return parts.join('&');\n    }\n\n    private _parseParam(key: string, value: any, parent: string) {\n        let processedKey = parent ? parent + '[' + key + ']' : key;\n        if (value && (<string>(typeof value) === 'object' || Array.isArray(value))) {\n            return this._JSON2URL(value, processedKey);\n        }\n        return processedKey + '=' + value;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Проекты/WhiteBoardManager/client/src/sdk/services/core/search.params.ts","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { JSONSearchParams } from '../core/search.params';\nimport { ErrorHandler } from '../core/error.service';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Rx';\nimport { AccessToken } from '../../models/AccessToken';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { User } from '../../models/User';\n\n\n/**\n * Api services for the `AccessToken` model.\n */\n@Injectable()\nexport class AccessTokenApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(Http) protected http: Http,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Inject(JSONSearchParams) protected searchParams: JSONSearchParams,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, searchParams, errorHandler);\n  }\n\n  /**\n   * Fetches belongsTo relation user.\n   *\n   * @param {any} id AccessToken id\n   *\n   * @param {boolean} refresh \n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `AccessToken` object.)\n   * </em>\n   */\n  public getUser(id: any, refresh: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/AccessTokens/:id/user\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof refresh !== 'undefined' && refresh !== null) _urlParams.refresh = refresh;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `AccessToken` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/AccessTokens\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id AccessToken id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `AccessToken` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/AccessTokens/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `AccessToken`.\n   */\n  public getModelName() {\n    return \"AccessToken\";\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Проекты/WhiteBoardManager/client/src/sdk/services/custom/AccessToken.ts","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { JSONSearchParams } from '../core/search.params';\nimport { ErrorHandler } from '../core/error.service';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Rx';\nimport { Customer } from '../../models/Customer';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { Line } from '../../models/Line';\n\n\n/**\n * Api services for the `Customer` model.\n */\n@Injectable()\nexport class CustomerApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(Http) protected http: Http,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Inject(JSONSearchParams) protected searchParams: JSONSearchParams,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, searchParams, errorHandler);\n  }\n\n  /**\n   * Find a related item by id for lines.\n   *\n   * @param {any} id Customer id\n   *\n   * @param {any} fk Foreign key for lines\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Customer` object.)\n   * </em>\n   */\n  public findByIdLines(id: any, fk: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/customer/:id/lines/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Delete a related item by id for lines.\n   *\n   * @param {any} id Customer id\n   *\n   * @param {any} fk Foreign key for lines\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public destroyByIdLines(id: any, fk: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"DELETE\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/customer/:id/lines/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Update a related item by id for lines.\n   *\n   * @param {any} id Customer id\n   *\n   * @param {any} fk Foreign key for lines\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Customer` object.)\n   * </em>\n   */\n  public updateByIdLines(id: any, fk: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PUT\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/customer/:id/lines/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Queries lines of Customer.\n   *\n   * @param {any} id Customer id\n   *\n   * @param {object} filter \n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Customer` object.)\n   * </em>\n   */\n  public getLines(id: any, filter: LoopBackFilter = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/customer/:id/lines\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof filter !== 'undefined' && filter !== null) _urlParams.filter = filter;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates a new instance in lines of this model.\n   *\n   * @param {any} id Customer id\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Customer` object.)\n   * </em>\n   */\n  public createLines(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/customer/:id/lines\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Deletes all lines of this model.\n   *\n   * @param {any} id Customer id\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public deleteLines(id: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"DELETE\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/customer/:id/lines\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Counts lines of Customer.\n   *\n   * @param {any} id Customer id\n   *\n   * @param {object} where Criteria to match model instances\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * Data properties:\n   *\n   *  - `count` – `{number}` - \n   */\n  public countLines(id: any, where: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/customer/:id/lines/count\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof where !== 'undefined' && where !== null) _urlParams.where = where;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Customer` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/customer\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id Customer id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Customer` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/customer/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates a new instance in lines of this model.\n   *\n   * @param {any} id Customer id\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Customer` object.)\n   * </em>\n   */\n  public createManyLines(id: any, data: any[] = [], customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/customer/:id/lines\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Customer`.\n   */\n  public getModelName() {\n    return \"Customer\";\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Проекты/WhiteBoardManager/client/src/sdk/services/custom/Customer.ts","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { JSONSearchParams } from '../core/search.params';\nimport { ErrorHandler } from '../core/error.service';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Rx';\nimport { Family } from '../../models/Family';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `Family` model.\n */\n@Injectable()\nexport class FamilyApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(Http) protected http: Http,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Inject(JSONSearchParams) protected searchParams: JSONSearchParams,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, searchParams, errorHandler);\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Family` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/family\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id Family id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Family` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/family/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Family`.\n   */\n  public getModelName() {\n    return \"Family\";\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Проекты/WhiteBoardManager/client/src/sdk/services/custom/Family.ts","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { JSONSearchParams } from '../core/search.params';\nimport { ErrorHandler } from '../core/error.service';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Rx';\nimport { Line } from '../../models/Line';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { Shift } from '../../models/Shift';\nimport { Family } from '../../models/Family';\nimport { TimeClean } from '../../models/TimeClean';\n\n\n/**\n * Api services for the `Line` model.\n */\n@Injectable()\nexport class LineApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(Http) protected http: Http,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Inject(JSONSearchParams) protected searchParams: JSONSearchParams,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, searchParams, errorHandler);\n  }\n\n  /**\n   * Find a related item by id for shifts.\n   *\n   * @param {any} id Line id\n   *\n   * @param {any} fk Foreign key for shifts\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Line` object.)\n   * </em>\n   */\n  public findByIdShifts(id: any, fk: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/line/:id/shifts/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Delete a related item by id for shifts.\n   *\n   * @param {any} id Line id\n   *\n   * @param {any} fk Foreign key for shifts\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public destroyByIdShifts(id: any, fk: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"DELETE\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/line/:id/shifts/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Update a related item by id for shifts.\n   *\n   * @param {any} id Line id\n   *\n   * @param {any} fk Foreign key for shifts\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Line` object.)\n   * </em>\n   */\n  public updateByIdShifts(id: any, fk: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PUT\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/line/:id/shifts/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Find a related item by id for models.\n   *\n   * @param {any} id Line id\n   *\n   * @param {any} fk Foreign key for models\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Line` object.)\n   * </em>\n   */\n  public findByIdModels(id: any, fk: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/line/:id/models/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Delete a related item by id for models.\n   *\n   * @param {any} id Line id\n   *\n   * @param {any} fk Foreign key for models\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public destroyByIdModels(id: any, fk: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"DELETE\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/line/:id/models/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Update a related item by id for models.\n   *\n   * @param {any} id Line id\n   *\n   * @param {any} fk Foreign key for models\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Line` object.)\n   * </em>\n   */\n  public updateByIdModels(id: any, fk: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PUT\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/line/:id/models/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Find a related item by id for timeCleans.\n   *\n   * @param {any} id Line id\n   *\n   * @param {any} fk Foreign key for timeCleans\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Line` object.)\n   * </em>\n   */\n  public findByIdTimeCleans(id: any, fk: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/line/:id/timeCleans/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Delete a related item by id for timeCleans.\n   *\n   * @param {any} id Line id\n   *\n   * @param {any} fk Foreign key for timeCleans\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public destroyByIdTimeCleans(id: any, fk: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"DELETE\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/line/:id/timeCleans/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Update a related item by id for timeCleans.\n   *\n   * @param {any} id Line id\n   *\n   * @param {any} fk Foreign key for timeCleans\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Line` object.)\n   * </em>\n   */\n  public updateByIdTimeCleans(id: any, fk: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PUT\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/line/:id/timeCleans/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Queries shifts of Line.\n   *\n   * @param {any} id Line id\n   *\n   * @param {object} filter \n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Line` object.)\n   * </em>\n   */\n  public getShifts(id: any, filter: LoopBackFilter = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/line/:id/shifts\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof filter !== 'undefined' && filter !== null) _urlParams.filter = filter;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates a new instance in shifts of this model.\n   *\n   * @param {any} id Line id\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Line` object.)\n   * </em>\n   */\n  public createShifts(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/line/:id/shifts\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Deletes all shifts of this model.\n   *\n   * @param {any} id Line id\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public deleteShifts(id: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"DELETE\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/line/:id/shifts\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Counts shifts of Line.\n   *\n   * @param {any} id Line id\n   *\n   * @param {object} where Criteria to match model instances\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * Data properties:\n   *\n   *  - `count` – `{number}` - \n   */\n  public countShifts(id: any, where: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/line/:id/shifts/count\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof where !== 'undefined' && where !== null) _urlParams.where = where;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Queries models of Line.\n   *\n   * @param {any} id Line id\n   *\n   * @param {object} filter \n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Line` object.)\n   * </em>\n   */\n  public getModels(id: any, filter: LoopBackFilter = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/line/:id/models\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof filter !== 'undefined' && filter !== null) _urlParams.filter = filter;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates a new instance in models of this model.\n   *\n   * @param {any} id Line id\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Line` object.)\n   * </em>\n   */\n  public createModels(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/line/:id/models\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Deletes all models of this model.\n   *\n   * @param {any} id Line id\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public deleteModels(id: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"DELETE\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/line/:id/models\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Counts models of Line.\n   *\n   * @param {any} id Line id\n   *\n   * @param {object} where Criteria to match model instances\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * Data properties:\n   *\n   *  - `count` – `{number}` - \n   */\n  public countModels(id: any, where: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/line/:id/models/count\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof where !== 'undefined' && where !== null) _urlParams.where = where;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Queries timeCleans of Line.\n   *\n   * @param {any} id Line id\n   *\n   * @param {object} filter \n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Line` object.)\n   * </em>\n   */\n  public getTimeCleans(id: any, filter: LoopBackFilter = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/line/:id/timeCleans\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof filter !== 'undefined' && filter !== null) _urlParams.filter = filter;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates a new instance in timeCleans of this model.\n   *\n   * @param {any} id Line id\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Line` object.)\n   * </em>\n   */\n  public createTimeCleans(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/line/:id/timeCleans\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Deletes all timeCleans of this model.\n   *\n   * @param {any} id Line id\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public deleteTimeCleans(id: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"DELETE\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/line/:id/timeCleans\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Counts timeCleans of Line.\n   *\n   * @param {any} id Line id\n   *\n   * @param {object} where Criteria to match model instances\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * Data properties:\n   *\n   *  - `count` – `{number}` - \n   */\n  public countTimeCleans(id: any, where: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/line/:id/timeCleans/count\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof where !== 'undefined' && where !== null) _urlParams.where = where;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Line` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/line\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id Line id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Line` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/line/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates a new instance in shifts of this model.\n   *\n   * @param {any} id Line id\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Line` object.)\n   * </em>\n   */\n  public createManyShifts(id: any, data: any[] = [], customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/line/:id/shifts\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates a new instance in models of this model.\n   *\n   * @param {any} id Line id\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Line` object.)\n   * </em>\n   */\n  public createManyModels(id: any, data: any[] = [], customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/line/:id/models\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates a new instance in timeCleans of this model.\n   *\n   * @param {any} id Line id\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Line` object.)\n   * </em>\n   */\n  public createManyTimeCleans(id: any, data: any[] = [], customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/line/:id/timeCleans\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Line`.\n   */\n  public getModelName() {\n    return \"Line\";\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Проекты/WhiteBoardManager/client/src/sdk/services/custom/Line.ts","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { User } from '../../models/User';\nimport { AccessToken } from '../../models/AccessToken';\nimport { Line } from '../../models/Line';\nimport { Customer } from '../../models/Customer';\nimport { Shift } from '../../models/Shift';\nimport { Timeline } from '../../models/Timeline';\nimport { Family } from '../../models/Family';\nimport { TimeClean } from '../../models/TimeClean';\n\nexport interface Models { [name: string]: any }\n\n@Injectable()\nexport class SDKModels {\n\n  private models: Models = {\n    User: User,\n    AccessToken: AccessToken,\n    Line: Line,\n    Customer: Customer,\n    Shift: Shift,\n    Timeline: Timeline,\n    Family: Family,\n    TimeClean: TimeClean,\n    \n  };\n\n  public get(modelName: string): any {\n    return this.models[modelName];\n  }\n\n  public getAll(): Models {\n    return this.models;\n  }\n\n  public getModelNames(): string[] {\n    return Object.keys(this.models);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Проекты/WhiteBoardManager/client/src/sdk/services/custom/SDKModels.ts","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { JSONSearchParams } from '../core/search.params';\nimport { ErrorHandler } from '../core/error.service';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Rx';\nimport { Shift } from '../../models/Shift';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { Timeline } from '../../models/Timeline';\n\n\n/**\n * Api services for the `Shift` model.\n */\n@Injectable()\nexport class ShiftApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(Http) protected http: Http,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Inject(JSONSearchParams) protected searchParams: JSONSearchParams,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, searchParams, errorHandler);\n  }\n\n  /**\n   * Find a related item by id for timelines.\n   *\n   * @param {any} id Shift id\n   *\n   * @param {any} fk Foreign key for timelines\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Shift` object.)\n   * </em>\n   */\n  public findByIdTimelines(id: any, fk: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/shift/:id/timelines/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Delete a related item by id for timelines.\n   *\n   * @param {any} id Shift id\n   *\n   * @param {any} fk Foreign key for timelines\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public destroyByIdTimelines(id: any, fk: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"DELETE\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/shift/:id/timelines/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Update a related item by id for timelines.\n   *\n   * @param {any} id Shift id\n   *\n   * @param {any} fk Foreign key for timelines\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Shift` object.)\n   * </em>\n   */\n  public updateByIdTimelines(id: any, fk: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PUT\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/shift/:id/timelines/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Queries timelines of Shift.\n   *\n   * @param {any} id Shift id\n   *\n   * @param {object} filter \n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Shift` object.)\n   * </em>\n   */\n  public getTimelines(id: any, filter: LoopBackFilter = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/shift/:id/timelines\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof filter !== 'undefined' && filter !== null) _urlParams.filter = filter;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates a new instance in timelines of this model.\n   *\n   * @param {any} id Shift id\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Shift` object.)\n   * </em>\n   */\n  public createTimelines(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/shift/:id/timelines\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Deletes all timelines of this model.\n   *\n   * @param {any} id Shift id\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public deleteTimelines(id: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"DELETE\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/shift/:id/timelines\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Counts timelines of Shift.\n   *\n   * @param {any} id Shift id\n   *\n   * @param {object} where Criteria to match model instances\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * Data properties:\n   *\n   *  - `count` – `{number}` - \n   */\n  public countTimelines(id: any, where: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/shift/:id/timelines/count\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof where !== 'undefined' && where !== null) _urlParams.where = where;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Shift` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/shift\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id Shift id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Shift` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/shift/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates a new instance in timelines of this model.\n   *\n   * @param {any} id Shift id\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Shift` object.)\n   * </em>\n   */\n  public createManyTimelines(id: any, data: any[] = [], customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/shift/:id/timelines\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Shift`.\n   */\n  public getModelName() {\n    return \"Shift\";\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Проекты/WhiteBoardManager/client/src/sdk/services/custom/Shift.ts","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { JSONSearchParams } from '../core/search.params';\nimport { ErrorHandler } from '../core/error.service';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Rx';\nimport { TimeClean } from '../../models/TimeClean';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `TimeClean` model.\n */\n@Injectable()\nexport class TimeCleanApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(Http) protected http: Http,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Inject(JSONSearchParams) protected searchParams: JSONSearchParams,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, searchParams, errorHandler);\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `TimeClean` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/timeClean\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id TimeClean id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `TimeClean` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/timeClean/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `TimeClean`.\n   */\n  public getModelName() {\n    return \"TimeClean\";\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Проекты/WhiteBoardManager/client/src/sdk/services/custom/TimeClean.ts","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter,  } from '../../models/BaseModels';\nimport { JSONSearchParams } from '../core/search.params';\nimport { ErrorHandler } from '../core/error.service';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Rx';\nimport { Timeline } from '../../models/Timeline';\nimport { SocketConnection } from '../../sockets/socket.connections';\n\n\n/**\n * Api services for the `Timeline` model.\n */\n@Injectable()\nexport class TimelineApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(Http) protected http: Http,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Inject(JSONSearchParams) protected searchParams: JSONSearchParams,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, searchParams, errorHandler);\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Timeline` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/timeline\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id Timeline id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `Timeline` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/timeline/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `Timeline`.\n   */\n  public getModelName() {\n    return \"Timeline\";\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Проекты/WhiteBoardManager/client/src/sdk/services/custom/Timeline.ts","/* tslint:disable */\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { SDKModels } from './SDKModels';\nimport { BaseLoopBackApi } from '../core/base.service';\nimport { LoopBackConfig } from '../../lb.config';\nimport { LoopBackAuth } from '../core/auth.service';\nimport { LoopBackFilter, SDKToken } from '../../models/BaseModels';\nimport { JSONSearchParams } from '../core/search.params';\nimport { ErrorHandler } from '../core/error.service';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Rx';\nimport { User } from '../../models/User';\nimport { SocketConnection } from '../../sockets/socket.connections';\nimport { AccessToken } from '../../models/AccessToken';\n\n\n/**\n * Api services for the `User` model.\n */\n@Injectable()\nexport class UserApi extends BaseLoopBackApi {\n\n  constructor(\n    @Inject(Http) protected http: Http,\n    @Inject(SocketConnection) protected connection: SocketConnection,\n    @Inject(SDKModels) protected models: SDKModels,\n    @Inject(LoopBackAuth) protected auth: LoopBackAuth,\n    @Inject(JSONSearchParams) protected searchParams: JSONSearchParams,\n    @Optional() @Inject(ErrorHandler) protected errorHandler: ErrorHandler\n  ) {\n    super(http,  connection,  models, auth, searchParams, errorHandler);\n  }\n\n  /**\n   * Find a related item by id for accessTokens.\n   *\n   * @param {any} id User id\n   *\n   * @param {any} fk Foreign key for accessTokens\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `User` object.)\n   * </em>\n   */\n  public findByIdAccessTokens(id: any, fk: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/:id/accessTokens/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Delete a related item by id for accessTokens.\n   *\n   * @param {any} id User id\n   *\n   * @param {any} fk Foreign key for accessTokens\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public destroyByIdAccessTokens(id: any, fk: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"DELETE\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/:id/accessTokens/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Update a related item by id for accessTokens.\n   *\n   * @param {any} id User id\n   *\n   * @param {any} fk Foreign key for accessTokens\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `User` object.)\n   * </em>\n   */\n  public updateByIdAccessTokens(id: any, fk: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PUT\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/:id/accessTokens/:fk\";\n    let _routeParams: any = {\n      id: id,\n      fk: fk\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Queries accessTokens of User.\n   *\n   * @param {any} id User id\n   *\n   * @param {object} filter \n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `User` object.)\n   * </em>\n   */\n  public getAccessTokens(id: any, filter: LoopBackFilter = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/:id/accessTokens\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof filter !== 'undefined' && filter !== null) _urlParams.filter = filter;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates a new instance in accessTokens of this model.\n   *\n   * @param {any} id User id\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `User` object.)\n   * </em>\n   */\n  public createAccessTokens(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/:id/accessTokens\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Deletes all accessTokens of this model.\n   *\n   * @param {any} id User id\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public deleteAccessTokens(id: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"DELETE\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/:id/accessTokens\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Counts accessTokens of User.\n   *\n   * @param {any} id User id\n   *\n   * @param {object} where Criteria to match model instances\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * Data properties:\n   *\n   *  - `count` – `{number}` - \n   */\n  public countAccessTokens(id: any, where: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/:id/accessTokens/count\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof where !== 'undefined' && where !== null) _urlParams.where = where;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch an existing model instance or insert a new one into the data source.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - Model instance data\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `User` object.)\n   * </em>\n   */\n  public patchOrCreate(data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Patch attributes for a model instance and persist it into the data source.\n   *\n   * @param {any} id User id\n   *\n   * @param {object} data Request data.\n   *\n   *  - `data` – `{object}` - An object of model property name/value pairs\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `User` object.)\n   * </em>\n   */\n  public patchAttributes(id: any, data: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"PATCH\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/:id\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Login a user with username/email and password.\n   *\n   * @param {string} include Related objects to include in the response. See the description of return value for more details.\n   *   Default value: `user`.\n   *\n   *  - `rememberMe` - `boolean` - Whether the authentication credentials\n   *     should be remembered in localStorage across app/browser restarts.\n   *     Default: `true`.\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * The response body contains properties of the AccessToken created on login.\n   * Depending on the value of `include` parameter, the body may contain additional properties:\n   * \n   *   - `user` - `U+007BUserU+007D` - Data of the currently logged in user. (`include=user`)\n   * \n   *\n   */\n  public login(credentials: any, include: any = 'user', rememberMe: boolean = true, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/login\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      credentials: credentials\n    };\n    let _urlParams: any = {};\n    if (typeof include !== 'undefined' && include !== null) _urlParams.include = include;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders)\n      .map(\n        (response: any) => {\n          response.ttl = parseInt(response.ttl);\n          response.rememberMe = rememberMe;\n          this.auth.setToken(response);\n          return response;\n        }\n      );\n      return result;\n      \n  }\n\n  /**\n   * Logout a user with access token.\n   *\n   * @param {object} data Request data.\n   *\n   * This method does not accept any data. Supply an empty object.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public logout(customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/logout\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n       _urlParams.access_token = this.auth.getAccessTokenId();\n    this.auth.clear(); \n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Trigger user's identity verification with configured verifyOptions\n   *\n   * @param {any} id User id\n   *\n   * @param {object} data Request data.\n   *\n   * This method does not accept any data. Supply an empty object.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public verify(id: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/:id/verify\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Confirm a user registration with identity verification token.\n   *\n   * @param {string} uid \n   *\n   * @param {string} token \n   *\n   * @param {string} redirect \n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public confirm(uid: any, token: any, redirect: any = {}, customHeaders?: Function): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/confirm\";\n    let _routeParams: any = {};\n    let _postBody: any = {};\n    let _urlParams: any = {};\n    if (typeof uid !== 'undefined' && uid !== null) _urlParams.uid = uid;\n    if (typeof token !== 'undefined' && token !== null) _urlParams.token = token;\n    if (typeof redirect !== 'undefined' && redirect !== null) _urlParams.redirect = redirect;\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Reset password for a user with email.\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public resetPassword(options: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/reset\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      options: options\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Change a user's password.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `oldPassword` – `{string}` - \n   *\n   *  - `newPassword` – `{string}` - \n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public changePassword(oldPassword: any, newPassword: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/change-password\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: {\n        oldPassword: oldPassword,\n        newPassword: newPassword\n      }\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Reset user's password via a password-reset token.\n   *\n   * @param {object} data Request data.\n   *\n   *  - `newPassword` – `{string}` - \n   *\n   * @returns {object} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * This method returns no data.\n   */\n  public setPassword(newPassword: any, customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/reset-password\";\n    let _routeParams: any = {};\n    let _postBody: any = {\n      data: {\n        newPassword: newPassword\n      }\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n\n  /**\n   * Creates a new instance in accessTokens of this model.\n   *\n   * @param {any} id User id\n   *\n   * @param {object} data Request data.\n   *\n   * This method expects a subset of model properties as request parameters.\n   *\n   * @returns {object[]} An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   *\n   * <em>\n   * (The remote method definition does not provide any description.\n   * This usually means the response is a `User` object.)\n   * </em>\n   */\n  public createManyAccessTokens(id: any, data: any[] = [], customHeaders?: Function): Observable<any> {\n    let _method: string = \"POST\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() +\n    \"/Users/:id/accessTokens\";\n    let _routeParams: any = {\n      id: id\n    };\n    let _postBody: any = {\n      data: data\n    };\n    let _urlParams: any = {};\n    let result = this.request(_method, _url, _routeParams, _urlParams, _postBody, null, customHeaders);\n    return result;\n  }\n  /**\n   * @ngdoc method\n   * @name sdk.User#getCurrent\n   * @methodOf sdk.User\n   *\n   * @description\n   *\n   * Get data of the currently logged user. Fail with HTTP result 401\n   * when there is no user logged in.\n   *\n   * @returns object An empty reference that will be\n   *   populated with the actual data once the response is returned\n   *   from the server.\n   */\n  public getCurrent(filter: LoopBackFilter = {}): Observable<any> {\n    let _method: string = \"GET\";\n    let _url: string = LoopBackConfig.getPath() + \"/\" + LoopBackConfig.getApiVersion() + \"/Users\" + \"/:id\";\n    let id: any = this.auth.getCurrentUserId();\n    if (id == null)\n    id = '__anonymous__';\n    let _routeParams: any = { id: id };\n    let _urlParams: any = {};\n    let _postBody: any = {};\n    if (filter) _urlParams.filter = filter;\n    return this.request(_method, _url, _routeParams, _urlParams, _postBody);\n  }\n  /**\n   * Get data of the currently logged user that was returned by the last\n   * call to {@link sdk.User#login} or\n   * {@link sdk.User#getCurrent}. Return null when there\n   * is no user logged in or the data of the current user were not fetched\n   * yet.\n   *\n   * @returns object An Account instance.\n   */\n  public getCachedCurrent() {\n    return this.auth.getCurrentUserData();\n  }\n  /**\n   * Get data of the currently logged access tokern that was returned by the last\n   * call to {@link sdk.User#login}\n   *\n   * @returns object An AccessToken instance.\n   */\n  public getCurrentToken(): AccessToken {\n    return this.auth.getToken();\n  }\n  /**\n   * @name sdk.User#isAuthenticated\n   *\n   * @returns {boolean} True if the current user is authenticated (logged in).\n   */\n  public isAuthenticated() {\n    return !(this.getCurrentId() === '' || this.getCurrentId() == null || this.getCurrentId() == 'null');\n  }\n\n  /**\n   * @name sdk.User#getCurrentId\n   *\n   * @returns object Id of the currently logged-in user or null.\n   */\n  public getCurrentId() {\n    return this.auth.getCurrentUserId();\n  }\n\n  /**\n   * The name of the model represented by this $resource,\n   * i.e. `User`.\n   */\n  public getModelName() {\n    return \"User\";\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Проекты/WhiteBoardManager/client/src/sdk/services/custom/User.ts","/* tslint:disable */\nexport * from './User';\nexport * from './AccessToken';\nexport * from './Line';\nexport * from './Customer';\nexport * from './Shift';\nexport * from './Timeline';\nexport * from './Family';\nexport * from './TimeClean';\nexport * from './SDKModels';\nexport * from './logger.service';\n\n\n\n// WEBPACK FOOTER //\n// C:/Проекты/WhiteBoardManager/client/src/sdk/services/custom/index.ts","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { LoopBackConfig } from '../../lb.config';\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@johncasarrubias>\n* @module LoggerService\n* @license MIT\n* @description\n* Console Log wrapper that can be disabled in production mode\n**/\n@Injectable()\nexport class LoggerService {\n\n  log(...args: any[]) {\n    if (LoopBackConfig.debuggable())\n    console.log.apply(console, args);\n  }\n\n  info(...args: any[]) {\n    if (LoopBackConfig.debuggable())\n    console.info.apply(console, args);\n  }\n\n  error(...args: any[]) {\n    if (LoopBackConfig.debuggable())\n    console.error.apply(console, args);\n  }\n\n  count(arg: string) {\n    if (LoopBackConfig.debuggable())\n    console.count(arg);\n  }\n\n  group(arg: string) {\n    if (LoopBackConfig.debuggable())\n    console.count(arg);\n  }\n\n  groupEnd() {\n    if (LoopBackConfig.debuggable())\n    console.groupEnd();\n  }\n\n  profile(arg: string) {\n    if (LoopBackConfig.debuggable())\n    console.count(arg);\n  }\n\n  profileEnd() {\n    if (LoopBackConfig.debuggable())\n    console.profileEnd();\n  }\n\n  time(arg: string) {\n    if (LoopBackConfig.debuggable())\n    console.time(arg);\n  }\n\n  timeEnd(arg: string) {\n    if (LoopBackConfig.debuggable())\n    console.timeEnd(arg);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Проекты/WhiteBoardManager/client/src/sdk/services/custom/logger.service.ts","/* tslint:disable */\nexport * from './core/index';\nexport * from './custom/index';\n\n\n\n// WEBPACK FOOTER //\n// C:/Проекты/WhiteBoardManager/client/src/sdk/services/index.ts","/* tslint:disable */\nimport * as io from 'socket.io-client';\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\n* @module SocketBrowser\n* @license MIT\n* @description\n* This module handle socket connections for web browsers, it will be DI Swapped\n* depending on the platform environment.\n* This module will be generated when the -d ng2web flag is set\n**/\nexport class SocketBrowser {\n  /**\n   * @method connect\n   * @param {string} url URL path to connect with the server.\n   * @param {any} options Any socket.io v1 =< valid options\n   * @return {any} Not currently a socket.io-client for web Typings implemented.\n   * @description\n   * This method will return a valid socket connection.  \n   **/\n  connect(url: string, options: any): any {\n    return io(url, options);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Проекты/WhiteBoardManager/client/src/sdk/sockets/socket.browser.ts","/* tslint:disable */\nimport { Injectable, Inject, NgZone } from '@angular/core';\nimport { SocketDriver } from './socket.driver';\nimport { AccessToken } from '../models';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/share';\nimport { LoopBackConfig } from '../lb.config';\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\n* @module SocketConnection\n* @license MIT\n* @description\n* This module handle socket connections and return singleton instances for each\n* connection, it will use the SDK Socket Driver Available currently supporting\n* Angular 2 for web, NativeScript 2 and Angular Universal.\n**/\n@Injectable()\nexport class SocketConnection {\n  private socket: any;\n  private subjects: {\n    onConnect: Subject<any>,\n    onDisconnect: Subject<any>,\n    onAuthenticated: Subject<any>,\n    onUnAuthorized: Subject<any>\n  } = {\n    onConnect: new Subject(),\n    onDisconnect: new Subject(),\n    onAuthenticated: new Subject(),\n    onUnAuthorized: new Subject()\n  };\n  public sharedObservables: {\n    sharedOnConnect?: Observable<any>,\n    sharedOnDisconnect?: Observable<any>,\n    sharedOnAuthenticated?: Observable<any>,\n    sharedOnUnAuthorized?: Observable<any>\n  } = {};\n  public authenticated: boolean = false;\n  /**\n   * @method constructor\n   * @param {SocketDriver} driver Socket IO Driver\n   * @param {NgZone} zone Angular 2 Zone\n   * @description\n   * The constructor will set references for the shared hot observables from\n   * the class subjects. Then it will subscribe each of these observables\n   * that will create a channel that later will be shared between subscribers.\n   **/\n  constructor(\n    @Inject(SocketDriver) private driver: SocketDriver,\n    @Inject(NgZone) private zone: NgZone\n  ) {\n    this.sharedObservables = {\n      sharedOnConnect: this.subjects.onConnect.asObservable().share(),\n      sharedOnDisconnect: this.subjects.onDisconnect.asObservable().share(),\n      sharedOnAuthenticated: this.subjects.onAuthenticated.asObservable().share(),\n      sharedOnUnAuthorized: this.subjects.onUnAuthorized.asObservable().share()\n    };\n    // This is needed to create the first channel, subsequents will share the connection\n    // We are using Hot Observables to avoid duplicating connection status events.\n    this.sharedObservables.sharedOnConnect.subscribe();\n    this.sharedObservables.sharedOnDisconnect.subscribe();\n    this.sharedObservables.sharedOnAuthenticated.subscribe();\n    this.sharedObservables.sharedOnUnAuthorized.subscribe();\n  }\n  /**\n   * @method connect\n   * @param {AccessToken} token AccesToken instance\n   * @return {void}\n   * @description\n   * This method will create a new socket connection when not previously established.\n   * If there is a broken connection it will re-connect.\n   **/\n  public connect(token: AccessToken = null): void {\n    if (!this.socket) {\n      console.info('Creating a new connection with: ', LoopBackConfig.getPath());\n      // Create new socket connection\n      this.socket = this.driver.connect(LoopBackConfig.getPath(), {\n        log: false,\n        secure: LoopBackConfig.isSecureWebSocketsSet(),\n        forceNew: true,\n        forceWebsockets: true,\n        transports: ['websocket']\n      });\n      // Listen for connection\n      this.on('connect', () => {\n        this.subjects.onConnect.next('connected');\n        // Authenticate or start heartbeat now    \n        this.emit('authentication', token);\n      });\n      // Listen for authentication\n      this.on('authenticated', () => {\n        this.authenticated = true;\n        this.subjects.onAuthenticated.next();\n        this.heartbeater();\n      })\n      // Listen for authentication\n      this.on('unauthorized', (err: any) => {\n        this.authenticated = false;\n        this.subjects.onUnAuthorized.next(err);\n      })\n      // Listen for disconnections\n      this.on('disconnect', (status: any) => this.subjects.onDisconnect.next(status));\n    } else if (this.socket && !this.socket.connected){\n      if (typeof this.socket.off === 'function') {\n        this.socket.off();\n      }\n      if (typeof this.socket.destroy === 'function') {\n        this.socket.destroy();\n      }\n      delete this.socket;\n      this.connect(token);\n    }\n  }\n  /**\n   * @method isConnected\n   * @return {boolean}\n   * @description\n   * This method will return true or false depending on established connections\n   **/\n  public isConnected(): boolean {\n    return (this.socket && this.socket.connected);\n  }\n  /**\n   * @method on\n   * @param {string} event Event name\n   * @param {Function} handler Event listener handler\n   * @return {void}\n   * @description\n   * This method listen for server events from the current WebSocket connection.\n   * This method is a facade that will wrap the original \"on\" method and run it\n   * within the Angular Zone to avoid update issues.\n   **/\n  public on(event: string, handler: Function): void {\n    this.socket.on(event, (data: any) => this.zone.run(() => handler(data)));\n  }\n  /**\n   * @method emit\n   * @param {string} event Event name\n   * @param {any=} data Any type of data\n   * @return {void}\n   * @description\n   * This method will send any type of data to the server according the event set.\n   **/\n  public emit(event: string, data?: any): void {\n    if (data) {\n      this.socket.emit(event, data);\n    } else {\n      this.socket.emit(event);\n    }\n  }\n  /**\n   * @method removeListener\n   * @param {string} event Event name\n   * @param {Function} handler Event listener handler\n   * @return {void}\n   * @description\n   * This method will wrap the original \"on\" method and run it within the Angular Zone\n   * Note: off is being used since the nativescript socket io client does not provide\n   * removeListener method, but only provides with off which is provided in any platform.\n   **/\n  public removeListener(event: string, handler: Function): void {\n    if (typeof this.socket.off === 'function') {\n      this.socket.off(event, handler);\n    }\n  }\n  /**\n   * @method removeAllListeners\n   * @param {string} event Event name\n   * @param {Function} handler Event listener handler\n   * @return {void}\n   * @description\n   * This method will wrap the original \"on\" method and run it within the Angular Zone\n   * Note: off is being used since the nativescript socket io client does not provide\n   * removeListener method, but only provides with off which is provided in any platform.\n   **/\n  public removeAllListeners(event: string): void {\n    if (typeof this.socket.removeAllListeners === 'function') {\n      this.socket.removeAllListeners(event);\n    }\n  }\n  /**\n   * @method disconnect\n   * @return {void}\n   * @description\n   * This will disconnect the client from the server\n   **/\n  public disconnect(): void {\n    this.socket.disconnect();\n  }\n  /**\n   * @method heartbeater\n   * @return {void}\n   * @description\n   * This will keep the connection as active, even when users are not sending\n   * data, this avoids disconnection because of a connection not being used.\n   **/\n  private heartbeater(): void {\n    let heartbeater: any = setInterval(() => {\n      if (this.isConnected()) {\n        this.socket.emit('lb-ping');\n      } else {\n        this.socket.removeAllListeners('lb-pong');\n        clearInterval(heartbeater);\n      }\n    }, 15000);\n    this.socket.on('lb-pong', (data: any) => console.info('Heartbeat: ', data));\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Проекты/WhiteBoardManager/client/src/sdk/sockets/socket.connections.ts","/* tslint:disable */\n/**\n * @module SocketDriver\n * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n * @license MIT\n * @description\n * The SocketDriver class is used for dependency injection swapping.\n * It will be provided using factory method from different sources.\n **/\nexport class SocketDriver {\n  connect(url: any, options: any) {}\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Проекты/WhiteBoardManager/client/src/sdk/sockets/socket.driver.ts","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nexport interface CookieInterface { [key: string]: any }\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\n* @module CookieBrowser\n* @license MIT\n* @description\n* This module handle cookies, it will be provided using DI Swapping according the\n* SDK Socket Driver Available currently supporting Angular 2 for web and NativeScript 2.\n**/\n@Injectable()\nexport class CookieBrowser {\n  /**\n   * @type {CookieInterface}\n   **/\n  private cookies: CookieInterface = {};\n  /**\n   * @method get\n   * @param {string} key Cookie key name\n   * @return {any}\n   * @description\n   * The getter will return any type of data persisted in cookies.\n   **/\n  get(key: string): any {\n    if (!this.cookies[key]) {\n      let cookie = window.document\n                         .cookie.split('; ')\n                         .filter((item: any) => item.split('=')[0] === key).pop();\n      if (!cookie) {\n        return null;\n      }\n\n      this.cookies[key] = this.parse(cookie.split('=').slice(1).join('='));\n    }\n\n    return this.cookies[key];\n  }\n  /**\n   * @method set\n   * @param {string} key Cookie key name\n   * @param {any} value Any value\n   * @param {Date=} expires The date of expiration (Optional)\n   * @return {void}\n   * @description\n   * The setter will return any type of data persisted in cookies.\n   **/\n  set(key: string, value: any, expires?: Date): void {\n    this.cookies[key] = value;\n    let cookie = `${key}=${value}; path=/${expires ? `; expires=${ expires.toUTCString() }` : ''}`;\n    window.document.cookie = cookie;\n  }\n  /**\n   * @method remove\n   * @param {string} key Cookie key name\n   * @return {void}\n   * @description\n   * This method will remove a cookie from the client.\n   **/\n  remove(key: string) {\n    document.cookie = key + '=; path=/; expires=Thu, 01 Jan 1970 00:00:01 GMT;';\n    delete this.cookies[key];\n  }\n  /**\n   * @method parse\n   * @param {any} value Input data expected to be JSON\n   * @return {void}\n   * @description\n   * This method will parse the string as JSON if possible, otherwise will\n   * return the value itself.\n   **/\n  private parse(value: any) {\n    try {\n        return JSON.parse(value);\n    } catch (e) {\n        return value;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Проекты/WhiteBoardManager/client/src/sdk/storage/cookie.browser.ts","/* tslint:disable */\nimport { Injectable } from '@angular/core';\n/**\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\n* @module StorageBrowser\n* @license MIT\n* @description\n* This module handle localStorage, it will be provided using DI Swapping according the\n* SDK Socket Driver Available currently supporting Angular 2 for web and NativeScript 2.\n**/\n@Injectable()\nexport class StorageBrowser {\n  /**\n   * @method get\n   * @param {string} key Storage key name\n   * @return {any}\n   * @description\n   * The getter will return any type of data persisted in localStorage.\n   **/\n  get(key: string): any {\n    let data: string = localStorage.getItem(key);\n    return this.parse(data);\n  }\n  /**\n   * @method set\n   * @param {string} key Storage key name\n   * @param {any} value Any value\n   * @return {void}\n   * @description\n   * The setter will return any type of data persisted in localStorage.\n   **/\n  set(key: string, value: any, expires?: Date): void {\n    localStorage.setItem(\n      key,\n      typeof value === 'object' ? JSON.stringify(value) : value\n    );\n  }\n  /**\n   * @method remove\n   * @param {string} key Storage key name\n   * @return {void}\n   * @description\n   * This method will remove a localStorage item from the client.\n   **/\n  remove(key: string): void {\n    if (localStorage[key]) {\n      localStorage.removeItem(key);\n    } else {\n      console.log('Trying to remove unexisting key: ', key);\n    }\n  }\n  /**\n   * @method parse\n   * @param {any} value Input data expected to be JSON\n   * @return {void}\n   * @description\n   * This method will parse the string as JSON if possible, otherwise will\n   * return the value itself.\n   **/\n  private parse(value: any) {\n    try {\n        return JSON.parse(value);\n    } catch (e) {\n        return value;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Проекты/WhiteBoardManager/client/src/sdk/storage/storage.browser.ts","/* tslint:disable */\n/**\n * @module Storage\n * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n * @license MIT\n * @description\n * The InternalStorage class is used for dependency injection swapping.\n * It will be provided using factory method from different sources.\n **/\nexport class BaseStorage {\n  /**\n   * @method get\n   * @param {string} key Storage key name\n   * @return {any}\n   * @description\n   * The getter will return any type of data persisted in storage.\n   **/\n  get(key: string): any {}\n  /**\n   * @method set\n   * @param {string} key Storage key name\n   * @param {any} value Any value\n   * @return {void}\n   * @description\n   * The setter will return any type of data persisted in localStorage.\n   **/\n  set(key: string, value: any, expires?: Date): void {}\n  /**\n   * @method remove\n   * @param {string} key Storage key name\n   * @return {void}\n   * @description\n   * This method will remove a localStorage item from the client.\n   **/\n  remove(key: string): void {}\n}\n/**\n * @module InternalStorage\n * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n * @license MIT\n * @description\n * The InternalStorage class is used for dependency injection swapping.\n * It will be provided using factory method from different sources.\n * This is mainly required because Angular Universal integration.\n * It does inject a CookieStorage instead of LocalStorage.\n **/\nexport class InternalStorage extends BaseStorage {}\n/**\n * @module SDKStorage\n * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\n * @license MIT\n * @description\n * The SDKStorage class is used for dependency injection swapping.\n * It will be provided using factory method according the right environment.\n * This is created for public usage, to allow persisting custom data\n * Into the local storage API.\n **/\nexport class SDKStorage extends BaseStorage {}\n\n\n\n// WEBPACK FOOTER //\n// C:/Проекты/WhiteBoardManager/client/src/sdk/storage/storage.swaps.ts","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ws (ignored)\n// module id = 1\n// module chunks = main"],"sourceRoot":"webpack:///"}